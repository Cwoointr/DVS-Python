// ===========================================================================//	CEyeDxLicenseFile.h - based on UWindowState by  ©1994 J. Rodden, DD/MF & Associates// ===========================================================================// Utilities for saving and restoring the EyeDx application's license information.//// All rights reserved. You may use this code in any application, recognition// would be appreciated but is not required.#pragma once#include <LPreferencesFile.h>const ResType 	kLicenseData = 'MISC';const long		kMISCVers1	= 1;// This structure is 64 bytes long. When new versions use the reserved// fields, make sure that the structure remains 64 bytes! The default// value for all fields is 0 - older copies of this resource will be// zero-filled. Use "0" as your new preference value's default.struct LicenseData{	long 	version;	long	expDate;		// Actually in the same format as the license code date	long	lastUseDate;	// Ditto	long	availableRuns;	// Number of Runs remaining in this license	long	serialNumberLow;	// Same format as in the license code	long	serialNumberHigh;	// Same format as in the license code	long	reserved[8];	long long checksum;		// Two's complement sum of the the other fields to validate							// the data - in case someone tries to edit it with a binary 							// editor. This is a long long value to handle summing up the							// other long fields.};class CEyeDxLicenseFile : public LPreferencesFile {public:				// This constructor is used for the invisible file in the				// Preferences folder.								CEyeDxLicenseFile(ConstStringPtr inFileName,							Boolean		   inCreateFolder = false);								// This constructor is used for the invisible file located elsewhere				// that is used as backup								CEyeDxLicenseFile(FSSpec &inFileSpec);					void 		LoadLicense(LicenseData *inLicenseData, short inResID = 0);	void 		SaveLicense(LicenseData *inLicenseData, short inResID = 0);};