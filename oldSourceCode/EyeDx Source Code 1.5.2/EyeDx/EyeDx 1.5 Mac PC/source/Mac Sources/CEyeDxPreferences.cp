/*******************************************************************************\ CEyeDxPreferences - a class for managing preferences Dan Crevier 6/19/97 <mailto:Dan.Crevier@pobox.com> To add preferences to your application, make a subclass of CEyeDxPreferences with member values for your prefs, and implement:  Read(LFileStream &prefFile) - to read preferences from a stream, like: 	  prefFile >> data1 >> data2 	Throw execptions if there is a problem with the data, and it will be 	flagged corrupt, and the default values will be used Write(LFileStream &prefFile) - to write the preferences to a stream, like: 	  prefFile << data1 << data2 ReportError(const LStr255 &errorString) - to report errors - like corrupt 	preferences In your application, add a member variable for your preferences.  In the constructor, add:	mPreferences = new CMyPrefs;	mPreferences->Init("\pMy Pref file name", kMyCreator);  In your destructor, add:  	mPreferences->FlushPreferences();	delete mPreferences; And you can also flush the preferences at any other time, like when the user closes a preference dialog or something.  Thanks to John C. Daub for lots of useful suggestions \*******************************************************************************/#include "CEyeDxPreferences.h"#include <LFileStream.h>#include <LString.h>#include <Folders.h>CEyeDxPreferences::CEyeDxPreferences(){}CEyeDxPreferences::~CEyeDxPreferences(){}void CEyeDxPreferences::Read(LFileStream &prefFile){}void CEyeDxPreferences::Write(LFileStream &prefFile){}void CEyeDxPreferences::SetDefaultPreferences(){}// override this to use whatever mechanism you use to report errorsvoid CEyeDxPreferences::ReportError(const LStr255 &errorString){	::ParamText(errorString, Str_Empty, Str_Empty, Str_Empty);	UModalAlerts::StopAlert(PPob_GeneralALRT);}