// =================================================================================//	COutOfMemoryDialog.cp				©1995 Metrowerks Inc. All rights reserved.// =================================================================================//	COutOfMemoryDialog.h	#include <LStdControl.h>#include <PP_Messages.h>#include <UReanimator.h>#include "EyeDxMacConstants.h"#include <NumberFormatting.h>#include "COutOfMemoryDialog.h"// ---------------------------------------------------------------------------------//		¥ COutOfMemoryDialog(LStream *)// ---------------------------------------------------------------------------------COutOfMemoryDialog::COutOfMemoryDialog(	LStream *inStream )		: CEyeDxDialogType( inStream ){}// ---------------------------------------------------------------------------------//		¥ ~COutOfMemoryDialog// ---------------------------------------------------------------------------------COutOfMemoryDialog::~COutOfMemoryDialog(){}// ---------------------------------------------------------------------------------//		¥ FinishCreateSelf// ---------------------------------------------------------------------------------voidCOutOfMemoryDialog::FinishCreateSelf(){	// Call inherited. LDialogBox's FinishCreateSelf	// sets up the default and cancel buttons.	CEyeDxDialogType::FinishCreateSelf();		// Link the dialog to the controls.	UReanimator::LinkListenerToControls( this, this, RidL_OutOfMemoryDialog );	}voidCOutOfMemoryDialog::ListenToMessage(	MessageT	inMessage,	void		*ioParam){	// We don't have to do anything here - just pass back the message to the caller, 	// who can decide what to do		// Always pass the message on to our base class		CEyeDxDialogType::ListenToMessage(inMessage, ioParam);}// ---------------------------------------------------------------------------------//		¥ SetupDialog// ---------------------------------------------------------------------------------voidCOutOfMemoryDialog::SetupDialog(long amountNeeded,								LStr255 *hintString){	// Set the version string from the vers resource		mWarningCaption = dynamic_cast<CEyeDxCaptionType*> (this->FindPaneByID(kOutOfMemoryWarningCaption));	ThrowIfNil_( mWarningCaption );		// We round-down the numbers to Kbytes		LStr255 theString;	LStr255 theNumberStr;		amountNeeded = (amountNeeded / 1024);	::NumToString(amountNeeded, theNumberStr);		theString = "\pThe EyeDx Application needs ";	theString += theNumberStr;	theString += "\p Kbytes of memory, and only ";	Size theGrow;	Size theAmountAvailable = ::TempMaxMem(&theGrow);	theAmountAvailable = (theAmountAvailable / 1024);	::NumToString(theAmountAvailable, theNumberStr);	theString += theNumberStr;	theString += "\p Kbytes are available. Please exit other applications if possible and press Retry. ";	theString += *hintString;	mWarningCaption->SetDescriptor(theString);	// Start listening again.				StartListening();}