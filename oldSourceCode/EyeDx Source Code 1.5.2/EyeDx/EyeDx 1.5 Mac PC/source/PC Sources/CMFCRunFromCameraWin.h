// CMFCRunFromCameraWin.h#pragma once// A minimal MFC application.// Various constants that define the sizes and positions of disk window// elements// All of the sizes and positions of window elements must be based on the default// font size for the window. This is because the user may run with large fonts enabled// in the display setup, both through the Appearance setting as well as the display // adaptor setting. This makes things really confusing, since the EyeDx window is// supposed to be nominally 400x400 pixels. But we're working with character cell// widths and heights, instead, and the width to height ratio may not be constant,// depending on the font selected. I just used the default Windows font as the basis// for these values. The default font's cell size is 7x16 pixels. We could get really// anal and calculate the exact ratio between cell size and widths or heights, but I// won't bother. These approximations are good enough.#define CAMERA_BUTTON_HEIGHT				2#define	CAMERA_BUTTON_WIDTH					21#define CAMERA_LEFT_MARGIN					3#define CAMERA_RIGHT_MARGIN					CAMERA_LEFT_MARGIN#define CAMERA_CENTER_GAP					4#define	CAMERA_INDENTED_MARGIN				(CAMERA_LEFT_MARGIN + 4)#define CAMERA_VIEW_WIDTH					24#define CAMERA_VIEW_HEIGHT					7.8// Progress captions at the top of the window#define	CAMERA_UP_PROGRESS_CAPTION_WIDTH	(CAMERA_VIEW_WIDTH)#define CAMERA_UP_PROGRESS_CAPTION_HEIGHT	1.25#define	CAMERA_UP_PROGRESS_CAPTION_X(w)		((w) - (CAMERA_UP_PROGRESS_CAPTION_WIDTH / 2.0))#define	CAMERA_UP_PROGRESS_CAPTION_Y		0.75// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_PROGRESS_CAPTION_WIDTH	(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_PROGRESS_CAPTION_HEIGHT	1.25#define	CAMERA_SIDE_PROGRESS_CAPTION_X(w)	((w) - (CAMERA_SIDE_PROGRESS_CAPTION_WIDTH / 2.0))#define	CAMERA_SIDE_PROGRESS_CAPTION_Y		0.75// Progress bars below the progress captions#define	CAMERA_UP_PROGRESS_BAR_WIDTH		(CAMERA_VIEW_WIDTH)#define CAMERA_UP_PROGRESS_BAR_HEIGHT		1#define	CAMERA_UP_PROGRESS_BAR_X(w)			((w) - (CAMERA_UP_PROGRESS_BAR_WIDTH / 2.0))#define	CAMERA_UP_PROGRESS_BAR_Y			2// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_PROGRESS_BAR_WIDTH		(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_PROGRESS_BAR_HEIGHT		1#define	CAMERA_SIDE_PROGRESS_BAR_X(w)		((w) - (CAMERA_SIDE_PROGRESS_BAR_WIDTH / 2.0))#define	CAMERA_SIDE_PROGRESS_BAR_Y			2// The Thumbnail Views#define	CAMERA_UP_VIEW_WIDTH				(CAMERA_VIEW_WIDTH)#define CAMERA_UP_VIEW_HEIGHT				(CAMERA_VIEW_HEIGHT)#define	CAMERA_UP_VIEW_X(w)					((w) - (CAMERA_UP_VIEW_WIDTH / 2.0))#define	CAMERA_UP_VIEW_Y					3.25// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_VIEW_WIDTH				(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_VIEW_HEIGHT				(CAMERA_VIEW_HEIGHT)#define	CAMERA_SIDE_VIEW_X(w)				((w) - (CAMERA_SIDE_VIEW_WIDTH / 2.0))#define	CAMERA_SIDE_VIEW_Y					3.25// The Quality Icons#define	CAMERA_UP_QUALITY_ICON_WIDTH		(2)#define CAMERA_UP_QUALITY_ICON_HEIGHT		(2)#define	CAMERA_UP_QUALITY_ICON_X(w)			((w) - (CAMERA_UP_VIEW_WIDTH / 2.0))#define	CAMERA_UP_QUALITY_ICON_Y			12// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_QUALITY_ICON_WIDTH		(2)#define CAMERA_SIDE_QUALITY_ICON_HEIGHT		(2)#define	CAMERA_SIDE_QUALITY_ICON_X(w)		((w) - (CAMERA_SIDE_VIEW_WIDTH / 2.0))#define	CAMERA_SIDE_QUALITY_ICON_Y			12// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_TOP_OF_HEAD_BITMAP_WIDTH	(2)#define CAMERA_SIDE_TOP_OF_HEAD_BITMAP_HEIGHT	(6)#define	CAMERA_SIDE_TOP_OF_HEAD_BITMAP_X(w)	(CAMERA_SIDE_VIEW_X(w) - 2.5)#define	CAMERA_SIDE_TOP_OF_HEAD_BITMAP_Y	4.75// The Image Captions#define	CAMERA_UP_CAPTION_WIDTH				(CAMERA_VIEW_WIDTH - CAMERA_UP_QUALITY_ICON_WIDTH - 3)#define CAMERA_UP_CAPTION_HEIGHT			1.25#define	CAMERA_UP_CAPTION_X(w)				(CAMERA_UP_QUALITY_ICON_X(w) + CAMERA_UP_QUALITY_ICON_WIDTH + 1)#define	CAMERA_UP_CAPTION_Y					11.9// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_CAPTION_WIDTH			(CAMERA_VIEW_WIDTH - CAMERA_SIDE_QUALITY_ICON_WIDTH - 3)#define CAMERA_SIDE_CAPTION_HEIGHT			1.25#define	CAMERA_SIDE_CAPTION_X(w)			(CAMERA_SIDE_QUALITY_ICON_X(w) + CAMERA_SIDE_QUALITY_ICON_WIDTH + 1)#define	CAMERA_SIDE_CAPTION_Y				11.9// The Up and Side Zoom Buttons#define	CAMERA_UP_ZOOM_BUTTON_WIDTH			21	// In pixels#define	CAMERA_UP_ZOOM_BUTTON_HEIGHT		21	// In pixels#define	CAMERA_UP_ZOOM_BUTTON_Y				11.75#define CAMERA_UP_ZOOM_BUTTON_LABEL			"ZoomButton"	// Must match resource name exactly!#define	CAMERA_SIDE_ZOOM_BUTTON_WIDTH		21#define	CAMERA_SIDE_ZOOM_BUTTON_HEIGHT		21#define	CAMERA_SIDE_ZOOM_BUTTON_Y			11.75#define CAMERA_SIDE_ZOOM_BUTTON_LABEL		"ZoomButton"	// Must match resource name exactly!// The Select Image Buttons#define CAMERA_SELECT_UP_BUTTON_X(w)		((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_SELECT_UP_BUTTON_Y			13.5#define CAMERA_SELECT_UP_BUTTON_LABEL		"Select &Up Image"// The X value is subtracted from the width of the window to get the real X#define CAMERA_SELECT_SIDE_BUTTON_X(w)		((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_SELECT_SIDE_BUTTON_Y			13.5#define CAMERA_SELECT_SIDE_BUTTON_LABEL		"Select &Side Image"// The Animate Checkbox#define CAMERA_ANIMATE_CHECKBOX_WIDTH		37#define CAMERA_ANIMATE_CHECKBOX_HEIGHT		1.25#define CAMERA_ANIMATE_CHECKBOX_X(w)		((w) - (CAMERA_ANIMATE_CHECKBOX_WIDTH / 2.0))#define	CAMERA_ANIMATE_CHECKBOX_Y			16#define CAMERA_ANIMATE_CHECKBOX_LABEL		"Show &animation during processing"// The Label for the Report Name Edit Field#define CAMERA_NAME_CAPTION_WIDTH			27#define CAMERA_NAME_CAPTION_HEIGHT			1.25#define CAMERA_NAME_CAPTION_X(w)			((w) - ((CAMERA_NAME_CAPTION_WIDTH + CAMERA_NAME_EDIT_FIELD_WIDTH + 1) / 2.0))#define	CAMERA_NAME_CAPTION_Y				17.75#define CAMERA_NAME_CAPTION_LABEL			"Report Name or ID Number:"// The Report Name Edit Field#define CAMERA_NAME_EDIT_FIELD_WIDTH		21#define CAMERA_NAME_EDIT_FIELD_HEIGHT		1.25#define CAMERA_NAME_EDIT_FIELD_X(w)			(CAMERA_NAME_CAPTION_X(w) + CAMERA_NAME_CAPTION_WIDTH + 1)#define	CAMERA_NAME_EDIT_FIELD_Y			17.75// The Cancel and OK Buttons#define CAMERA_CANCEL_BUTTON_X(w)			((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_CANCEL_BUTTON_Y				19.5#define CAMERA_CANCEL_BUTTON_LABEL			"&Cancel"// The X value is subtracted from the width of the window to get the real X#define CAMERA_OK_BUTTON_X(w)				((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_OK_BUTTON_Y					19.5#define CAMERA_OK_BUTTON_LABEL				"&OK"// This is the license status caption at the bottom of the window - its X position is the// same as the cancel button#define CAMERA_LICENSE_CAPTION_X(w)			((w) - (CAMERA_LICENSE_CAPTION_WIDTH / 2.0))#define	CAMERA_LICENSE_CAPTION_Y			22#define CAMERA_LICENSE_CAPTION_WIDTH		48#define CAMERA_LICENSE_CAPTION_HEIGHT		1.25#define CAMERA_LICENSE_CAPTION_LABEL		""// This is the session status caption at the bottom of the window - its X position is the// same as the cancel button#define CAMERA_SESSION_CAPTION_X(w)			((w) - (CAMERA_SESSION_CAPTION_WIDTH / 2.0))#define	CAMERA_SESSION_CAPTION_Y			23.5#define CAMERA_SESSION_CAPTION_WIDTH		48#define CAMERA_SESSION_CAPTION_HEIGHT		1.25#define CAMERA_SESSION_CAPTION_LABEL		""// Forward declarationclass CMainWindow;class CMFCRunFromCameraWin : public CMFCRunWin{	public:			CMFCRunFromCameraWin(CRect *posRect, CMainWindow *myParent, 								CEyeDxBooleanType *DirectorySet, char *DefaultImagesDir,								DCPortNum *pPortNum, DCBitRate pConnectionRate);			protected:		CEyeDxBooleanType					initialized;			virtual	afx_msg	int		OnCreate(LPCREATESTRUCT);		virtual afx_msg void	OnSetFocus(CWnd *pOldWnd);		virtual CEyeDxBooleanType			PreTranslateMessage(MSG *pMsg);				virtual	afx_msg	void	OnSelectUpButtonClicked();		virtual	afx_msg	void	OnSelectSideButtonClicked();		virtual afx_msg	void	OnUpZoomButtonClicked();		virtual afx_msg	void	OnSideZoomButtonClicked();				virtual	afx_msg	int		OnOkButtonClicked();		virtual	afx_msg	void	OnCancelButtonClicked();						void 					StartCamera(UINT wParam, LONG lParam);		BOOL					HandleCameraImageSelect(SideSelect theSide,  										   CEyeDxDibStatic *theMainWindowView, 										   CStatic *theMainWindowCaption,										   DCPictInfo *theMainWindowGenericPictInfo,										   DC120PictInfo *theMainWindowPictInfo,										   CStatic *theMainWindowQualityIcon);		DECLARE_MESSAGE_MAP()		private:		DCPortNum				*m_PortNum;		DCBitRate				m_ConnectionRate;};