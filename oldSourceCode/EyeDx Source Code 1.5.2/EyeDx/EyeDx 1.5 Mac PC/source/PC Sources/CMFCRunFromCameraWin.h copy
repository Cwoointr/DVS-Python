// CMFCRunFromCameraWin.h// A minimal MFC application.// These are definitions for the objects in the disk windowenum { 		IDC_CAMERA_UP_PROGRESS_CAPTION = 200,	IDC_CAMERA_SIDE_PROGRESS_CAPTION,		IDC_CAMERA_UP_PROGRESS_BAR,	IDC_CAMERA_SIDE_PROGRESS_BAR,		IDC_CAMERA_UP_VIEW,	IDC_CAMERA_SIDE_VIEW,		IDC_CAMERA_UP_QUALITY_ICON,	IDC_CAMERA_SIDE_QUALITY_ICON,		IDC_CAMERA_UP_CAPTION	,	IDC_CAMERA_SIDE_CAPTION,	IDC_CAMERA_SELECT_UP_BUTTON,	IDC_CAMERA_SELECT_SIDE_BUTTON,	IDC_CAMERA_ANIMATE_CHECKBOX,		IDC_CAMERA_NAME_EDIT_FIELD_CAPTION,	IDC_CAMERA_NAME_EDIT_FIELD,	IDC_CAMERA_CANCEL,	IDC_CAMERA_OK	};// Various constants that define the sizes and positions of disk window// elements// All of the sizes and positions of window elements must be based on the default// font size for the window. This is because the user may run with large fonts enabled// in the display setup, both through the Appearance setting as well as the display // adaptor setting. This makes things really confusing, since the EyeDx window is// supposed to be nominally 400x400 pixels. But we're working with character cell// widths and heights, instead, and the width to height ratio may not be constant,// depending on the font selected. I just used the default Windows font as the basis// for these values. The default font's cell size is 7x16 pixels. We could get really// anal and calculate the exact ratio between cell size and widths or heights, but I// won't bother. These approximations are good enough.#define CAMERA_BUTTON_HEIGHT					2#define	CAMERA_BUTTON_WIDTH					21#define CAMERA_LEFT_MARGIN					3#define CAMERA_RIGHT_MARGIN					CAMERA_LEFT_MARGIN#define CAMERA_CENTER_GAP						4#define	CAMERA_INDENTED_MARGIN				(CAMERA_LEFT_MARGIN + 4)#define CAMERA_VIEW_WIDTH						24#define CAMERA_VIEW_HEIGHT					7.8// Progress captions at the top of the window#define	CAMERA_UP_PROGRESS_CAPTION_WIDTH		(CAMERA_VIEW_WIDTH)#define CAMERA_UP_PROGRESS_CAPTION_HEIGHT		1.25#define	CAMERA_UP_PROGRESS_CAPTION_X(w)		((w) - (CAMERA_UP_PROGRESS_CAPTION_WIDTH / 2.0))#define	CAMERA_UP_PROGRESS_CAPTION_Y			0.75// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_PROGRESS_CAPTION_WIDTH	(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_PROGRESS_CAPTION_HEIGHT	1.25#define	CAMERA_SIDE_PROGRESS_CAPTION_X(w)		((w) - (CAMERA_SIDE_PROGRESS_CAPTION_WIDTH / 2.0))#define	CAMERA_SIDE_PROGRESS_CAPTION_Y		0.75// Progress bars below the progress captions#define	CAMERA_UP_PROGRESS_BAR_WIDTH			(CAMERA_VIEW_WIDTH)#define CAMERA_UP_PROGRESS_BAR_HEIGHT			1#define	CAMERA_UP_PROGRESS_BAR_X(w)			((w) - (CAMERA_UP_PROGRESS_BAR_WIDTH / 2.0))#define	CAMERA_UP_PROGRESS_BAR_Y				2// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_PROGRESS_BAR_WIDTH		(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_PROGRESS_BAR_HEIGHT		1#define	CAMERA_SIDE_PROGRESS_BAR_X(w)			((w) - (CAMERA_SIDE_PROGRESS_BAR_WIDTH / 2.0))#define	CAMERA_SIDE_PROGRESS_BAR_Y			2// The Thumbnail Views#define	CAMERA_UP_VIEW_WIDTH					(CAMERA_VIEW_WIDTH)#define CAMERA_UP_VIEW_HEIGHT					(CAMERA_VIEW_HEIGHT)#define	CAMERA_UP_VIEW_X(w)					((w) - (CAMERA_UP_VIEW_WIDTH / 2.0))#define	CAMERA_UP_VIEW_Y						3.25// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_VIEW_WIDTH				(CAMERA_VIEW_WIDTH)#define CAMERA_SIDE_VIEW_HEIGHT				(CAMERA_VIEW_HEIGHT)#define	CAMERA_SIDE_VIEW_X(w)					((w) - (CAMERA_SIDE_VIEW_WIDTH / 2.0))#define	CAMERA_SIDE_VIEW_Y					3.25// The Quality Icons#define	CAMERA_UP_QUALITY_ICON_WIDTH			(2)#define CAMERA_UP_QUALITY_ICON_HEIGHT			(2)#define	CAMERA_UP_QUALITY_ICON_X(w)			((w) - (CAMERA_UP_VIEW_WIDTH / 2.0))#define	CAMERA_UP_QUALITY_ICON_Y				12// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_QUALITY_ICON_WIDTH		(2)#define CAMERA_SIDE_QUALITY_ICON_HEIGHT		(2)#define	CAMERA_SIDE_QUALITY_ICON_X(w)			((w) - (CAMERA_SIDE_VIEW_WIDTH / 2.0))#define	CAMERA_SIDE_QUALITY_ICON_Y			12// The Image Captions#define	CAMERA_UP_CAPTION_WIDTH				(CAMERA_VIEW_WIDTH - CAMERA_UP_QUALITY_ICON_WIDTH - 1)#define CAMERA_UP_CAPTION_HEIGHT				1.25#define	CAMERA_UP_CAPTION_X(w)				((w) + (CAMERA_UP_VIEW_WIDTH / 2.0) - (CAMERA_UP_CAPTION_WIDTH))#define	CAMERA_UP_CAPTION_Y					12// The X value is subtracted from the width of the window to get the real X#define	CAMERA_SIDE_CAPTION_WIDTH				(CAMERA_VIEW_WIDTH - CAMERA_SIDE_QUALITY_ICON_WIDTH - 1)#define CAMERA_SIDE_CAPTION_HEIGHT			1.25#define	CAMERA_SIDE_CAPTION_X(w)				((w) + (CAMERA_SIDE_VIEW_WIDTH / 2) - (CAMERA_SIDE_CAPTION_WIDTH))#define	CAMERA_SIDE_CAPTION_Y					12// The Select Image Buttons#define CAMERA_SELECT_UP_BUTTON_X(w)			((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_SELECT_UP_BUTTON_Y				14#define CAMERA_SELECT_UP_BUTTON_LABEL			"Select Up Image"// The X value is subtracted from the width of the window to get the real X#define CAMERA_SELECT_SIDE_BUTTON_X(w)		((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_SELECT_SIDE_BUTTON_Y			14#define CAMERA_SELECT_SIDE_BUTTON_LABEL		"Select Side Image"// The Animate Checkbox#define CAMERA_ANIMATE_CHECKBOX_WIDTH			37#define CAMERA_ANIMATE_CHECKBOX_HEIGHT		1.25#define CAMERA_ANIMATE_CHECKBOX_X(w)			((w) - (CAMERA_ANIMATE_CHECKBOX_WIDTH / 2.0))#define	CAMERA_ANIMATE_CHECKBOX_Y				17#define CAMERA_ANIMATE_CHECKBOX_LABEL			"Show animation during processing"// The Label for the Report Name Edit Field#define CAMERA_NAME_CAPTION_WIDTH				6#define CAMERA_NAME_CAPTION_HEIGHT			1.25#define	CAMERA_NAME_CAPTION_Y					19#define CAMERA_NAME_CAPTION_LABEL				"Name:"// The Report Name Edit Field#define CAMERA_NAME_EDIT_FIELD_WIDTH			30#define CAMERA_NAME_EDIT_FIELD_HEIGHT			1.25#define	CAMERA_NAME_EDIT_FIELD_Y				19// The Cancel and OK Buttons#define CAMERA_CANCEL_BUTTON_X(w)				((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_CANCEL_BUTTON_Y				21#define CAMERA_CANCEL_BUTTON_LABEL			"Cancel"// The X value is subtracted from the width of the window to get the real X#define CAMERA_OK_BUTTON_X(w)					((w) - (CAMERA_BUTTON_WIDTH / 2.0))#define	CAMERA_OK_BUTTON_Y					21#define CAMERA_OK_BUTTON_LABEL				"OK"// Forward declarationclass CMainWindow;class CMFCRunFromCameraWin : public CWnd{	public:			CMFCRunFromCameraWin(CRect *posRect, CMainWindow *myParent, BOOL *DirectorySet, char *DefaultImagesDir);			protected:			virtual	void 	PostNcDestroy();		afx_msg	int		OnCreate(LPCREATESTRUCT);		afx_msg	void	OnClose();		afx_msg	void	OnSelectUpButtonClicked();		afx_msg	void	OnSelectSideButtonClicked();		afx_msg	void	OnCameraAnimateCheckboxClicked();				afx_msg	void	OnCameraOkButtonClicked();		afx_msg	void	OnCameraCancelButtonClicked();				void			CleanupImages(CStatic *theUpView, CStatic *theSideView);		DECLARE_MESSAGE_MAP()			private:			CMainWindow		*m_parent;				BOOL			*m_DirectorySetPtr;				char			*m_DefaultImagesDir;				int				m_cxChar;		int				m_cyChar;				UINT			m_MessageToSend;			CStatic			m_ctlUpProgressCaption;		CStatic			m_ctlSideProgressCaption;		CProgressCtrl	m_ctlUpProgressBar;		CProgressCtrl	m_ctlSideProgressBar;				CEyeDxDibStatic	m_ctlUpView;		CEyeDxDibStatic	m_ctlSideView;		CStatic			m_ctlUpQualityBitmap;		CStatic			m_ctlSideQualityBitmap;		CStatic			m_ctlUpCaption;		CStatic			m_ctlSideCaption;		CButton			m_ctlUpSelectButton;		CButton			m_ctlSideSelectButton;		CButton			m_ctlAnimateCheckbox;		CStatic			m_ctlNameCaption;		CEdit			m_ctlNameEditField;				CButton			m_ctlCancelButton;		CButton			m_ctlOkButton;				BOOL			m_UpSelected;		BOOL			m_SideSelected;				DC120PictInfo	m_UpPictInfo;		DC120PictInfo	m_SidePictInfo;				CFont			m_ctlFont;				CBitmap			m_hBadBitmap;		CBitmap			m_hCautionBitmap;		CBitmap			m_hGoodBitmap;};