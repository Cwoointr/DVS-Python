// CMFCRunFromDiskWin.h// A minimal MFC application.// Various constants that define the sizes and positions of disk window// elements// All of the sizes and positions of window elements must be based on the default// font size for the window. This is because the user may run with large fonts enabled// in the display setup, both through the Appearance setting as well as the display // adaptor setting. This makes things really confusing, since the EyeDx window is// supposed to be nominally 400x400 pixels. But we're working with character cell// widths and heights, instead, and the width to height ratio may not be constant,// depending on the font selected. I just used the default Windows font as the basis// for these values. The default font's cell size is 7x16 pixels. We could get really// anal and calculate the exact ratio between cell size and widths or heights, but I// won't bother. These approximations are good enough.#define DISK_BUTTON_HEIGHT					2#define	DISK_BUTTON_WIDTH					21#define DISK_LEFT_MARGIN					3#define DISK_RIGHT_MARGIN					DISK_LEFT_MARGIN#define DISK_CENTER_GAP						4#define	DISK_INDENTED_MARGIN				(DISK_LEFT_MARGIN + 4)#define DISK_VIEW_WIDTH						24#define DISK_VIEW_HEIGHT					7.8// Progress captions at the top of the window#define	DISK_UP_PROGRESS_CAPTION_WIDTH		(DISK_VIEW_WIDTH)#define DISK_UP_PROGRESS_CAPTION_HEIGHT		1.25#define	DISK_UP_PROGRESS_CAPTION_X(w)		((w) - (DISK_UP_PROGRESS_CAPTION_WIDTH / 2.0))#define	DISK_UP_PROGRESS_CAPTION_Y			0.75// The X value is subtracted from the width of the window to get the real X#define	DISK_SIDE_PROGRESS_CAPTION_WIDTH	(DISK_VIEW_WIDTH)#define DISK_SIDE_PROGRESS_CAPTION_HEIGHT	1.25#define	DISK_SIDE_PROGRESS_CAPTION_X(w)		((w) - (DISK_SIDE_PROGRESS_CAPTION_WIDTH / 2.0))#define	DISK_SIDE_PROGRESS_CAPTION_Y		0.75// Progress bars below the progress captions#define	DISK_UP_PROGRESS_BAR_WIDTH			(DISK_VIEW_WIDTH)#define DISK_UP_PROGRESS_BAR_HEIGHT			1#define	DISK_UP_PROGRESS_BAR_X(w)			((w) - (DISK_UP_PROGRESS_BAR_WIDTH / 2.0))#define	DISK_UP_PROGRESS_BAR_Y				2// The X value is subtracted from the width of the window to get the real X#define	DISK_SIDE_PROGRESS_BAR_WIDTH		(DISK_VIEW_WIDTH)#define DISK_SIDE_PROGRESS_BAR_HEIGHT		1#define	DISK_SIDE_PROGRESS_BAR_X(w)			((w) - (DISK_SIDE_PROGRESS_BAR_WIDTH / 2.0))#define	DISK_SIDE_PROGRESS_BAR_Y			2// The Thumbnail Views#define	DISK_UP_VIEW_WIDTH					(DISK_VIEW_WIDTH)#define DISK_UP_VIEW_HEIGHT					(DISK_VIEW_HEIGHT)#define	DISK_UP_VIEW_X(w)					((w) - (DISK_UP_VIEW_WIDTH / 2.0))#define	DISK_UP_VIEW_Y						3.25// The X value is subtracted from the width of the window to get the real X#define	DISK_SIDE_VIEW_WIDTH				(DISK_VIEW_WIDTH)#define DISK_SIDE_VIEW_HEIGHT				(DISK_VIEW_HEIGHT)#define	DISK_SIDE_VIEW_X(w)					((w) - (DISK_SIDE_VIEW_WIDTH / 2.0))#define	DISK_SIDE_VIEW_Y					3.25// The Quality Icons#define	DISK_UP_QUALITY_ICON_WIDTH			(2)#define DISK_UP_QUALITY_ICON_HEIGHT			(2)#define	DISK_UP_QUALITY_ICON_X(w)			((w) - (DISK_UP_VIEW_WIDTH / 2.0))#define	DISK_UP_QUALITY_ICON_Y				12// The X value is subtracted from the width of the window to get the real X#define	DISK_SIDE_QUALITY_ICON_WIDTH		(2)#define DISK_SIDE_QUALITY_ICON_HEIGHT		(2)#define	DISK_SIDE_QUALITY_ICON_X(w)			((w) - (DISK_SIDE_VIEW_WIDTH / 2.0))#define	DISK_SIDE_QUALITY_ICON_Y			12// The Image Captions#define	DISK_UP_CAPTION_WIDTH				(DISK_VIEW_WIDTH - DISK_UP_QUALITY_ICON_WIDTH - 1)#define DISK_UP_CAPTION_HEIGHT				1.25#define	DISK_UP_CAPTION_X(w)				((w) + (DISK_UP_VIEW_WIDTH / 2.0) - (DISK_UP_CAPTION_WIDTH))#define	DISK_UP_CAPTION_Y					12// The X value is subtracted from the width of the window to get the real X#define	DISK_SIDE_CAPTION_WIDTH				(DISK_VIEW_WIDTH - DISK_SIDE_QUALITY_ICON_WIDTH - 1)#define DISK_SIDE_CAPTION_HEIGHT			1.25#define	DISK_SIDE_CAPTION_X(w)				((w) + (DISK_SIDE_VIEW_WIDTH / 2) - (DISK_SIDE_CAPTION_WIDTH))#define	DISK_SIDE_CAPTION_Y					12// The Select Image Buttons#define DISK_SELECT_UP_BUTTON_X(w)			((w) - (DISK_BUTTON_WIDTH / 2.0))#define	DISK_SELECT_UP_BUTTON_Y				14#define DISK_SELECT_UP_BUTTON_LABEL			"Select &Up Image"// The X value is subtracted from the width of the window to get the real X#define DISK_SELECT_SIDE_BUTTON_X(w)		((w) - (DISK_BUTTON_WIDTH / 2.0))#define	DISK_SELECT_SIDE_BUTTON_Y			14#define DISK_SELECT_SIDE_BUTTON_LABEL		"Select &Side Image"// The Animate Checkbox#define DISK_ANIMATE_CHECKBOX_WIDTH			37#define DISK_ANIMATE_CHECKBOX_HEIGHT		1.25#define DISK_ANIMATE_CHECKBOX_X(w)			((w) - (DISK_ANIMATE_CHECKBOX_WIDTH / 2.0))#define	DISK_ANIMATE_CHECKBOX_Y				17#define DISK_ANIMATE_CHECKBOX_LABEL			"Show &animation during processing"// The Label for the Report Name Edit Field#define DISK_NAME_CAPTION_WIDTH				6#define DISK_NAME_CAPTION_HEIGHT			1.25#define	DISK_NAME_CAPTION_Y					19#define DISK_NAME_CAPTION_LABEL				"Name:"// The Report Name Edit Field#define DISK_NAME_EDIT_FIELD_WIDTH			30#define DISK_NAME_EDIT_FIELD_HEIGHT			1.25#define	DISK_NAME_EDIT_FIELD_Y				19// The Cancel and OK Buttons#define DISK_CANCEL_BUTTON_X(w)				((w) - (DISK_BUTTON_WIDTH / 2.0))#define	DISK_CANCEL_BUTTON_Y				21#define DISK_CANCEL_BUTTON_LABEL			"&Cancel"// The X value is subtracted from the width of the window to get the real X#define DISK_OK_BUTTON_X(w)					((w) - (DISK_BUTTON_WIDTH / 2.0))#define	DISK_OK_BUTTON_Y					21#define DISK_OK_BUTTON_LABEL				"&OK"// Forward declarationclass CMainWindow;class CMFCRunFromDiskWin : public CMFCRunWin{	public:			CMFCRunFromDiskWin(CRect *posRect, CMainWindow *myParent, BOOL *DirectorySet, char *DefaultImagesDir);			protected:			BOOL			PreTranslateMessage(MSG *pMsg);				afx_msg	int		OnCreate(LPCREATESTRUCT);		afx_msg	void	OnSelectUpButtonClicked();		afx_msg	void	OnSelectSideButtonClicked();				afx_msg	int		OnOkButtonClicked();		afx_msg	void	OnCancelButtonClicked();				DECLARE_MESSAGE_MAP()			private:};