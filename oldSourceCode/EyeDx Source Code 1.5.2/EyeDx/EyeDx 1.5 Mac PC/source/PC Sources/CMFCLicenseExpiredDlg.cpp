// main.cp#include <stdio.h>#include <windows.h>#include <wingdi.h>#include <winbase.h>#include <winuser.h>#include <process.h>#include "resource.h"#include "main.h"#include "CMFCLicenseExpiredDlg.h"#if defined (WIN32)	#define IS_WIN32	TRUE#else	#define IS_WIN32	FALSE#endifBEGIN_MESSAGE_MAP( CMFCLicenseExpiredDlg, CDialog )ON_NOTIFY_EX(TTN_NEEDTEXT, 0, OnToolTipText)END_MESSAGE_MAP()CEyeDxBooleanType CMFCLicenseExpiredDlg::OnToolTipText(UINT, NMHDR* pNMHDR, LRESULT*){	TOOLTIPTEXT *pTTT = (TOOLTIPTEXT *) pNMHDR;	if (!(pTTT->uFlags & TTF_IDISHWND))	// the ID must be a handle to a window		return FALSE;			UINT uID = pNMHDR->idFrom;	uID = ::GetDlgCtrlID((HWND)uID);			CString strTipText;		// Attempt to load a ToolTip string that corresponds to the control's ID		if(!strTipText.LoadString(uID))		return FALSE;		// Stuff text into the ToolTip, 80 characters maximum		strncpy(pTTT->lpszText, strTipText, 80);	return TRUE;}CEyeDxBooleanType CMFCLicenseExpiredDlg::OnInitDialog(){	CDialog::OnInitDialog();	CenterWindow();			m_ctlCaption = (CStatic *) GetDlgItem(IDC_LICENSE_EXPIRED_CAPTION);	EnableToolTips(TRUE);		switch (m_Status)	{	case LicenseStatusExpiredDate:		m_ctlCaption->SetWindowText("Your license has passed its expiration date.");		break;	case LicenseStatusExpiredCount:		m_ctlCaption->SetWindowText("Your license has no analysis runs available.");		break;	case LicenseStatusExpiredBoth:		m_ctlCaption->SetWindowText("Your license has passed its expiration date and has no analysis runs available.");		break;			case LicenseStatusDateOutOfRange:		m_ctlCaption->SetWindowText("It appears that the system clock has been set back. License is disabled.");		break;	}			return TRUE;}