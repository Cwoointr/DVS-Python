// main.cp#include "main.h"BEGIN_MESSAGE_MAP( CMFCVerifyZoomDlg, CDialog )ON_NOTIFY_EX(TTN_NEEDTEXT, 0, OnToolTipText)ON_BN_CLICKED(IDC_VERIFY_ZOOM_DOWNLOAD_BUTTON, OnDownloadPressed)END_MESSAGE_MAP()CEyeDxBooleanType CMFCVerifyZoomDlg::OnToolTipText(UINT, NMHDR* pNMHDR, LRESULT*){	TOOLTIPTEXT *pTTT = (TOOLTIPTEXT *) pNMHDR;	if (!(pTTT->uFlags & TTF_IDISHWND))	// the ID must be a handle to a window		return FALSE;			UINT uID = pNMHDR->idFrom;	uID = ::GetDlgCtrlID((HWND)uID);			CString strTipText;		// Attempt to load a ToolTip string that corresponds to the control's ID		if(!strTipText.LoadString(uID))		return FALSE;		// Stuff text into the ToolTip, 80 characters maximum		strncpy(pTTT->lpszText, strTipText, 80);	return TRUE;}CEyeDxBooleanType CMFCVerifyZoomDlg::OnInitDialog(){	CDialog::OnInitDialog();			CenterWindow();		EnableToolTips(TRUE);		m_ctlFilenameCaption = (CStatic *) GetDlgItem(IDC_VERIFY_ZOOM_NAME_CAPTION);			m_ctlDownloadButton = (CButton *) GetDlgItem(IDC_VERIFY_ZOOM_DOWNLOAD_BUTTON);		m_ctlProgressBar = (CProgressCtrl *) GetDlgItem(IDC_VERIFY_ZOOM_PROGRESS_BAR);	m_ctlMainView.SubclassDlgItem(IDC_VERIFY_ZOOM_MAIN_VIEW, this);	CEyeDxLongStringType theFilenameString;			m_MainWindowCaption->GetWindowText(theFilenameString);	m_ctlFilenameCaption->SetWindowText(theFilenameString);		if (*m_ImageAlreadyDownloaded)	{		if (m_Location == kUpOrientation)			m_ctlMainView.SetImageFromRaw24Bit(up_image, UP_ROWS, UP_COLS);		else			m_ctlMainView.SetImageFromRaw24Bit(side_image, SIDE_ROWS, SIDE_COLS);		m_ctlDownloadButton->EnableWindow(FALSE);	}	else	{		m_ctlMainView.CopyBitmapData(m_MainWindowView);	}	return TRUE;}void CMFCVerifyZoomDlg::OnOK(){	CDialog::OnOK();}void CMFCVerifyZoomDlg::OnDownloadPressed(){	// User has asked us to download the full image. Once we do this, we disable the button		CEyeDxVariable *theSessionNameVariable = m_VariableList->GetVariableByName(CommonStringLiteral_(kCEyeDxVariableSESSIONNAME));	m_ctlProgressBar->ShowWindow(SW_SHOW);					if (m_Location == kUpOrientation)	{		CEyeDxVariable *theUpImageVariable = m_VariableList->GetVariableByName(CommonStringLiteral_(kCEyeDxVariableUPIMAGE));			// Cleanup any existing Up image				m_MainWindow->CleanupUpImage();				if (!DownloadImageFromCamera(1, &up_image, &UP_ROWS, &UP_COLS, up_filename, theSessionNameVariable, theUpImageVariable,							this, m_ctlProgressBar, m_ctlFilenameCaption, SaveFullImages))			StopAlert(this, CommonStringLiteral_("Unable to download full picture."));		else		{			m_ctlMainView.SetImageFromRaw24Bit(up_image, UP_ROWS, UP_COLS);			*m_ImageAlreadyDownloaded = true;		}	}	else	{		CEyeDxVariable *theSideImageVariable = m_VariableList->GetVariableByName(CommonStringLiteral_(kCEyeDxVariableSIDEIMAGE));			// Cleanup any existing Side image				m_MainWindow->CleanupSideImage();				if (!DownloadImageFromCamera(2, &side_image, &SIDE_ROWS, &SIDE_COLS, side_filename, theSessionNameVariable, theSideImageVariable,							this, m_ctlProgressBar, m_ctlFilenameCaption, SaveFullImages))			StopAlert(this, CommonStringLiteral_("Unable to download full picture."));		else		{			m_ctlMainView.SetImageFromRaw24Bit(side_image, SIDE_ROWS, SIDE_COLS);			*m_ImageAlreadyDownloaded = true;		}	}				m_ctlProgressBar->ShowWindow(SW_HIDE);							m_ctlDownloadButton->EnableWindow(FALSE);		// Reset the caption to the file name	CEyeDxLongStringType theFilenameString;			m_MainWindowCaption->GetWindowText(theFilenameString);	m_ctlFilenameCaption->SetWindowText(theFilenameString);}