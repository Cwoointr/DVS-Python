// main.cp#include "main.h"BEGIN_MESSAGE_MAP( CMFCAnotherSubjectDlg, CDialog )ON_BN_CLICKED(IDC_ANOTHER_SUBJECT_SESSION_BUTTON, OnSessionButtonClicked)ON_NOTIFY_EX(TTN_NEEDTEXT, 0, OnToolTipText)END_MESSAGE_MAP()CEyeDxBooleanType CMFCAnotherSubjectDlg::OnToolTipText(UINT, NMHDR* pNMHDR, LRESULT*){	TOOLTIPTEXT *pTTT = (TOOLTIPTEXT *) pNMHDR;	if (!(pTTT->uFlags & TTF_IDISHWND))	// the ID must be a handle to a window		return FALSE;			UINT uID = pNMHDR->idFrom;	uID = ::GetDlgCtrlID((HWND)uID);			CString strTipText;		// Attempt to load a ToolTip string that corresponds to the control's ID		if(!strTipText.LoadString(uID))		return FALSE;		// Stuff text into the ToolTip, 80 characters maximum		strncpy(pTTT->lpszText, strTipText, 80);	return TRUE;}CEyeDxBooleanType CMFCAnotherSubjectDlg::OnInitDialog(){	CDialog::OnInitDialog();	CenterWindow();			EnableToolTips(TRUE);	m_ctlSessionCaption = (CStatic*) (GetDlgItem(IDC_ANOTHER_SUBJECT_SESSION_CAPTION));	m_ctlSessionButton = (CButton*) (GetDlgItem(IDC_ANOTHER_SUBJECT_SESSION_BUTTON));		// Indicate the current session if it isn't the default, and also allow the user to	// end the current session. If it is the default, allow the	// user to Start a Session.		CEyeDxVariableList *theVariableList = gGlobalProperties->GetVariableList();	m_SessionNameVariable = theVariableList->GetVariableByName(CommonStringLiteral_(kCEyeDxVariableSESSIONNAME));	if (m_SessionNameVariable)		UpdateSessionButtonAndCaption(gGlobalProperties->GetUseSessions(), m_SessionNameVariable, m_ctlSessionButton, m_ctlSessionCaption);					return TRUE;}void CMFCAnotherSubjectDlg::OnOK(){	CDialog::OnOK();}void CMFCAnotherSubjectDlg::OnCancel(){	CDialog::OnCancel();}void CMFCAnotherSubjectDlg::OnSessionButtonClicked(){	CEyeDxLongStringType *theSessionName = m_SessionNameVariable->GetValue();		if (*theSessionName == CommonStringLiteral_(kDefaultSessionName))		HandleNewSession(this, gGlobalProperties->GetVariableList(), 							m_ctlSessionButton, 							m_ctlSessionCaption, 							gGlobalProperties->GetPromptingStyle());	else	{		CStringArray *theCustomReportStrings = gGlobalProperties->GetUserTextBlocks();		CString theSessionSummaryText = theCustomReportStrings->GetAt(kReportLayoutSessionSummaryText);		HandleEndOfSession(this, gGlobalProperties->GetVariableList(), 							m_ctlSessionButton, 							m_ctlSessionCaption, 							m_SessionNameVariable, 							theSessionSummaryText, 							theSessionSummaryText.GetLength(),							gGlobalProperties->GetPromptingStyle());	}			// The calls above will update the dialog's button and caption for the session. The main window's button	// is updated by its code after we exit Auto mode.		// Create the subfolders in case the user changed the session		m_MainWindow->CreateSubdirs(this);}