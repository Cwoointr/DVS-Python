#pragma once#define WINDOWS#include "main.h"class CMFCVerifyPictureDlg : public CDialog{public:	CMFCVerifyPictureDlg(CMFCRunFromCameraAutoWin *pParentWnd,											CMainWindow *pMainWindow,											CEyeDxVariableList *pVariableList,											enum eOrientation pLocation, 											DCPictInfo *pGenericPictInfo,											DC120PictInfo *pPictInfo, 										    CEyeDxDibStatic *pMainWindowView, 										    CStatic *pMainWindowCaption,										    CStatic *pMainWindowQualityBitmap,										    CEyeDxBooleanType *theImageAlreadyDownloaded) :		CDialog(IDD_VERIFY_PICTURE_DIALOG, (CWnd *)pParentWnd) 		{ 			m_MainWindow = pMainWindow;			m_VariableList = pVariableList;			m_Location = pLocation;			m_GenericPictInfo = pGenericPictInfo;			m_PictInfo = pPictInfo;			m_MainWindowView = pMainWindowView;			m_MainWindowCaption = pMainWindowCaption;			m_MainWindowQualityBitmap = pMainWindowQualityBitmap;			m_ImageAlreadyDownloaded = theImageAlreadyDownloaded;		}			virtual CEyeDxBooleanType	OnInitDialog();	afx_msg CEyeDxBooleanType	OnToolTipText(UINT, NMHDR* pNMHDR, LRESULT*);	virtual void	OnRetakePressed();	virtual void	OnZoomPressed();	protected:	CMainWindow			*m_MainWindow;	enum eOrientation 	m_Location;	DCPictInfo 			*m_GenericPictInfo;	DC120PictInfo 		*m_PictInfo;	CEyeDxDibStatic 	*m_MainWindowView;	CStatic 			*m_MainWindowCaption;	CStatic 			*m_MainWindowQualityBitmap;	CEyeDxVariableList 	*m_VariableList;		DECLARE_MESSAGE_MAP()private:	CButton				*m_ctlOkButton;	CBitmapButton		m_ctlZoomButton;	CStatic				*m_ctlResultsCaption;	CStatic				*m_ctlNameCaption;	CStatic				*m_ctlQualityCaption;	CStatic				*m_ctlTopBitmap;	CStatic				*m_ctlSideBitmap;	CEyeDxDibStatic		m_ctlThumbnail;	CBitmap				m_hTopOfHeadSidewaysBitmap;	CBitmap				m_hTopOfHeadNormalBitmap;	CBitmap				m_hBadBitmap;	CBitmap				m_hGoodBitmap;	CBitmap				m_hCautionBitmap;	CEyeDxBooleanType	*m_ImageAlreadyDownloaded;};