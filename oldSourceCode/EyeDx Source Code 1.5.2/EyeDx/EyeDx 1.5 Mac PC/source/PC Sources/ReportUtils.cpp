#include "globals.h"#include "DC120.h"#include "CMFCRunFromDiskWin.h"#include "main.h"#include <stdio.h>#include <stdlib.h>// This routine checks if the specified report exists, and prompts the user// for what to do. It also checks the report string for length and illegal// characters, and displays a notice if appropriate.// Returns true if the operation should continue, and false if not.// It also updates the global report_filename variable.BOOL CheckReportValidity(CWnd *theWindow, char *theReportNameString){	// Perform some validity checks on the report name		long theReportNameLength = strlen(theReportNameString);		if (theReportNameLength == 0)	{				theWindow->MessageBox("Please enter a report name.", "EyeDx", MB_OK | MB_ICONEXCLAMATION);	}	else if (theReportNameLength > kMaxReportNameLength)	{		CString theLengthStr;		theLengthStr.Format("The report name is too long (maximum %d characters)", kMaxReportNameLength);				theWindow->MessageBox(theLengthStr, "Error", MB_OK);	}	else if (strchr(theReportNameString, '\\'))	{							theWindow->MessageBox("The report name cannot contain the backslash ('\') character.", "EyeDx", MB_OK | MB_ICONEXCLAMATION);	}	else	{		strcpy(report_filename, theReportNameString);				// Check if this report already exists. If it does, prompt the user whether to continue				char reportpath[255];		sprintf(reportpath, "reports\\%s.htm", report_filename);		FILE *fp;				// Default to the no case		int item_hit = IDCANCEL;		if ((fp = fopen(reportpath, "rw")) != NULL)		{			fclose(fp);			item_hit = theWindow->MessageBox("A report by this name already exists.\nOverwrite?", "EyeDx", MB_OKCANCEL | MB_ICONEXCLAMATION);		}		if (item_hit == IDOK)			return TRUE;		else			return FALSE;	}	return FALSE;		}