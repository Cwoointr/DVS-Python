// main.cp#include "main.h"BEGIN_MESSAGE_MAP( CMFCSummaryZoomDlg, CDialog )ON_NOTIFY_EX(TTN_NEEDTEXT, 0, OnToolTipText)END_MESSAGE_MAP()CEyeDxBooleanType CMFCSummaryZoomDlg::OnToolTipText(UINT, NMHDR* pNMHDR, LRESULT*){	TOOLTIPTEXT *pTTT = (TOOLTIPTEXT *) pNMHDR;	if (!(pTTT->uFlags & TTF_IDISHWND))	// the ID must be a handle to a window		return FALSE;			UINT uID = pNMHDR->idFrom;	uID = ::GetDlgCtrlID((HWND)uID);			CString strTipText;		// Attempt to load a ToolTip string that corresponds to the control's ID		if(!strTipText.LoadString(uID))		return FALSE;		// Stuff text into the ToolTip, 80 characters maximum		strncpy(pTTT->lpszText, strTipText, 80);	return TRUE;}CEyeDxBooleanType CMFCSummaryZoomDlg::OnInitDialog(){	CDialog::OnInitDialog();			EnableToolTips(TRUE);		CClientDC dc(this);		TEXTMETRIC tm;		dc.GetTextMetrics(&tm);	int m_cxChar = tm.tmAveCharWidth;	int m_cyChar = tm.tmHeight + tm.tmExternalLeading;		CRect rect;		GetClientRect(&rect);		int WindowWidth = (rect.right-rect.left) / m_cxChar;		int CenterLine = WindowWidth / 2;		rect.SetRect(m_cxChar * SUMMARY_ZOOM_CAPTION_X(CenterLine), 				 m_cyChar * SUMMARY_ZOOM_CAPTION_Y, 				 m_cxChar * (SUMMARY_ZOOM_CAPTION_X(CenterLine) + SUMMARY_ZOOM_CAPTION_WIDTH), 				 m_cyChar * (SUMMARY_ZOOM_CAPTION_Y + SUMMARY_ZOOM_CAPTION_HEIGHT));		m_ctlNameCaption.Create("", WS_CHILD | WS_VISIBLE | SS_CENTER, rect, this, IDC_SUMMARY_ZOOM_NAME_CAPTION);	rect.SetRect(m_cxChar * SUMMARY_ZOOM_MAIN_VIEW_X(CenterLine), 				 m_cyChar * SUMMARY_ZOOM_MAIN_VIEW_Y, 				 m_cxChar * (SUMMARY_ZOOM_MAIN_VIEW_X(CenterLine) + SUMMARY_ZOOM_MAIN_VIEW_WIDTH), 				 m_cyChar * (SUMMARY_ZOOM_MAIN_VIEW_Y + SUMMARY_ZOOM_MAIN_VIEW_HEIGHT));		m_ctlMainView.Create("", WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_SUNKEN, rect, this, IDC_SUMMARY_ZOOM_MAIN_VIEW);		m_ctlNameCaption.SetWindowText(*m_ImageName);			if (m_MainImage)	{		m_ctlMainView.SetImageFromRaw24Bit(m_MainImage, m_MainImageRows, m_MainImageCols);	}	if (m_RightEyeImage)	{		rect.SetRect(m_cxChar * SUMMARY_ZOOM_RIGHT_VIEW_X(CenterLine), 					 m_cyChar * SUMMARY_ZOOM_RIGHT_VIEW_Y, 					 m_cxChar * (SUMMARY_ZOOM_RIGHT_VIEW_X(CenterLine) + SUMMARY_ZOOM_RIGHT_VIEW_WIDTH), 					 m_cyChar * (SUMMARY_ZOOM_RIGHT_VIEW_Y + SUMMARY_ZOOM_RIGHT_VIEW_HEIGHT));				m_ctlRightEyeView.Create("", WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_SUNKEN, rect, this, IDC_SUMMARY_ZOOM_RIGHT_EYE_VIEW);		m_ctlRightEyeView.SetImageFromRaw24Bit(m_RightEyeImage, m_EyeImageRows, m_EyeImageCols);	}	if (m_LeftEyeImage)	{		rect.SetRect(m_cxChar * SUMMARY_ZOOM_LEFT_VIEW_X(CenterLine), 					 m_cyChar * SUMMARY_ZOOM_LEFT_VIEW_Y, 					 m_cxChar * (SUMMARY_ZOOM_LEFT_VIEW_X(CenterLine) + SUMMARY_ZOOM_LEFT_VIEW_WIDTH), 					 m_cyChar * (SUMMARY_ZOOM_LEFT_VIEW_Y + SUMMARY_ZOOM_LEFT_VIEW_HEIGHT));				m_ctlLeftEyeView.Create("", WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_SUNKEN, rect, this, IDC_SUMMARY_ZOOM_LEFT_EYE_VIEW);		m_ctlLeftEyeView.SetImageFromRaw24Bit(m_LeftEyeImage, m_EyeImageRows, m_EyeImageCols);	}		CRect theRightEyeImageRect;		if ((m_RightEyeImage == NULL) && (m_LeftEyeImage == NULL))		theRightEyeImageRect.SetRect(m_cxChar * SUMMARY_ZOOM_OK_BUTTON_X(CenterLine), 					 m_cyChar * SUMMARY_ZOOM_OK_BUTTON_Y_NO_EYES, 					 m_cxChar * (SUMMARY_ZOOM_OK_BUTTON_X(CenterLine) + SUMMARY_ZOOM_OK_BUTTON_WIDTH), 					 m_cyChar * (SUMMARY_ZOOM_OK_BUTTON_Y_NO_EYES + SUMMARY_ZOOM_OK_BUTTON_HEIGHT));	else		theRightEyeImageRect.SetRect(m_cxChar * SUMMARY_ZOOM_OK_BUTTON_X(CenterLine), 					 m_cyChar * SUMMARY_ZOOM_OK_BUTTON_Y, 					 m_cxChar * (SUMMARY_ZOOM_OK_BUTTON_X(CenterLine) + SUMMARY_ZOOM_OK_BUTTON_WIDTH), 					 m_cyChar * (SUMMARY_ZOOM_OK_BUTTON_Y + SUMMARY_ZOOM_OK_BUTTON_HEIGHT));	m_ctlOKButton.Create("OK", WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON | WS_TABSTOP, theRightEyeImageRect, this, IDOK);		CRect popUpRect;			GetClientRect(&popUpRect);					// If no eye images are provided, we want to shrink the dialog	if ((m_RightEyeImage == NULL) && (m_LeftEyeImage == NULL))		popUpRect.bottom -= (m_cyChar * (SUMMARY_ZOOM_RIGHT_VIEW_HEIGHT + 2.5));	else		popUpRect.bottom -= ((m_cyChar * 1) + (theRightEyeImageRect.Height()));				CalcWindowRect(&popUpRect);		SetWindowPos(NULL, 0, 0, popUpRect.Width(), popUpRect.Height(), SWP_NOZORDER | SWP_NOMOVE );				 	SetDefID(IDOK);		CenterWindow();		return TRUE;}void CMFCSummaryZoomDlg::OnOK(){	CDialog::OnOK();}