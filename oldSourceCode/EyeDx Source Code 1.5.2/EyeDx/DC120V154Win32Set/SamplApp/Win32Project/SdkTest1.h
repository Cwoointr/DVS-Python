// dc25sdkt.h : main header file for the DC25SDKT application//#ifndef __AFXWIN_H__	#error include 'stdafx.h' before including this file for PCH#endif#include "resource.h"       // main symbols/////////////////////////////////////////////////////////////////////////////// CSDKTest1:// See SdkTest1.cpp for the implementation of this class////*******************************************************************// + Ohbe added#define	StartErrorTrap	while(TRUE){#define	EndErrorTrap	break;}#define	SDKErrorCheck	if(m_SDKRetValue!=DC_NoErr)break;#define	kThumbWidth		80#define	kThumbHeight	60#define DefaultThumbnailSize	19200typedef struct{	WORD				PictureNum;	short				BitCount;	short				PictureWidth;	short				PictureHeight;	LPBITMAPINFOHEADER	lpBitmapInfo;	WORD				BmpInfoSize;	HCHARPTR			pPicture;	DWORD				BmpPictureSize;	HBITMAP				hBitmap;}ImageStruct,far* lpImageStruct;#ifdef DC50Include/*typedef struct{	// + Ogawa	char Album[61][DC120OneAlbumLength];	//char Album[60][14];	// - Ogawa}	AlbumNameArray, far* lpAlbumNameArray;// + Ogawatypedef struct{	char	PictureName[10][DC120AlbumPictureSize];}	AlbumPictureNameArray, far* lpAlbumPictureNameArray;typedef struct{	char Album[8][DC120OneAlbumLength];}	AlbumAvailableArray, far* lpAlbumAvailableArray;// - Ogawa*/#endif// This is to support C calling Callbacks on C++// Never use for any other perpose. class CMainFrame;#ifdef WIN32// + Ogawaextern "C" __declspec(dllexport) BOOL pascal  InputCallbackFunction(HCHARPTR Buffer, long Offset, long Length, long RefCon);extern "C" __declspec(dllexport) BOOL pascal  OutputCallbackFunction(HCHARPTR Buffer, long Offset, long Length, long RefCon);extern "C" __declspec(dllexport) BOOL pascal  ProgressCallbackFunction(DCProgressStatus state, 												short Percent, DCProgressType CbType, long RefCon); // declared in MainFrm.CPP// - Ogawa#else // WIN16extern "C" BOOL far pascal __export ProgressCallbackFunction(DCProgressStatus state, 												short Percent, DCProgressType CbType); // declared in MainFrm.CPP#endif// end of critical area.// - Ohbe//*******************************************************************class CSDKTest1 : public CWinApp{public:	DCJPEGCompLevel m_JPEGCompLevel;	short m_PictureNumber;	short m_ToAlbumNumber;	short m_FromAlbumNumber;	short m_PictNumber;	CSDKTest1();//*******************************************************************// + Ohbe added	~CSDKTest1();	void huge* HugeMalloc(DWORD MemoryAllocateSize);	void HugeFree(void huge* HugeMemoryPtr);	CMainFrame*			m_pWndFrame;	// This is to support C calling Callbacks.										// Never use for any other purpose	BOOL				m_InitialErrorFlag;	BOOL				m_IsOpenDriver;	BOOL				m_IsOpenCamera;#ifdef ALLSTAR	KDCDriverPtr		m_pDCDriver;	KDCCameraPtr		m_pDCCamera;	KDCStatusPtr		m_pGenericStatus;#else	DCDriverPtr			m_pDCDriver;	DCCameraPtr			m_pDCCamera;	DCStatusPtr			m_pGenericStatus;#endif//	DC20StatusPtr		m_pDC20FullStatus;//	DC25StatusPtr		m_pDC25FullStatus;#ifdef DC50Include	DC50StatusPtr		m_pDC50FullStatus;#endif#ifdef DC40Include	DC40StatusPtr		m_pDC40FullStatus;#endif#ifdef DC120Include	DC120StatusPtr		m_pDC120FullStatus;#endif	DCConfigPtr			m_pGenericConfig;//	DC20ConfigPtr		m_pDC20FullConfig;//	DC25ConfigPtr		m_pDC25FullConfig;#ifdef DC50Include	DC50ConfigPtr		m_pDC50FullConfig;#endif#ifdef DC40Include	DC40ConfigPtr		m_pDC40FullConfig;#endif#ifdef DC120Include	DC120ConfigPtr		m_pDC120FullConfig;#endif	CHARPTR				m_pCamId;	DCPictInfoPtr		m_pGenericInfo;//	DC25PictInfoPtr		m_p25FullPictInfo;//	DC20PictInfoPtr		m_p20FullPictInfo;#ifdef DC50Include	// + Ogawa	DC50PictInfoPtr		m_p50FullPictInfo;	//DC50PictInfoPtr		m_pDC50FullPictInfo;	// - Ogawa#endif#ifdef DC40Include	// + Ogawa	DC40PictInfoPtr		m_p40FullPictInfo;	//DC40PictInfoPtr		m_pDC40FullPictInfo;	// - Ogawa#endif#ifdef DC120Include	// + Ogawa	DC120PictInfoPtr		m_p120FullPictInfo;	//DC120PictInfoPtr		m_pDC120FullPictInfo;	// - Ogawa#endif#ifdef ALLSTAR	KDCImgProcDataPtr	m_pIPData;	KDCOutputWindowPtr	m_pWindowData;#else	DCImgProcDataPtr	m_pIPData;	DCOutputWindowPtr	m_pWindowData;#endif	HCHARPTR			m_pImageBuffer;	HCHARPTR			m_pPictInfoBuffer;#ifdef ALLSTAR	KDCImageIOProc		m_pInputFunction;	KDCImageIOProc		m_pOutputFunction;	KDCProgressProc		m_pProgressFunction;#else	DCImageIOProc		m_pInputFunction;	DCImageIOProc		m_pOutputFunction;	DCProgressProc		m_pProgressFunction;#endif	HCHARPTR			m_pInputBuffer;	HCHARPTR			m_pOutputBuffer; 	HCHARPTR			m_pThumbnailBuffer;#ifdef ALLSTAR	KDCImageIOCBPtr		m_pInput;	KDCImageIOCBPtr		m_pOutput;	KDCProgressCBPtr	m_pProgress;#else	DCImageIOCBPtr		m_pInput;	DCImageIOCBPtr		m_pOutput;	DCProgressCBPtr		m_pProgress;#endif#ifdef DC50Include	short				m_AlbumNumber;	DC50PreviewInfoPtr	m_pPreviewInfo;	    BOOL				m_IsPreviewNULL;// for CListDlg's OnInitDialog.//	AlbumNameArray		m_AlbumNames;	//long				m_AlbumNameArraySize;		// Rem by Ogawa	// + Ogawa	DCCameraType		m_NativeCameraType;	HCHARPTR			m_pAlbumAvailableArray;	long				m_AlbumAvailableArraySize;	DC120AllAlbum		m_AlbumAll;	DC120AllAlbumPtr	m_pAlbumAll;	long				m_AlbumAllSize;	HCHARPTR			m_pAlbumPictNameArray;	long				m_AlbumPictNameArraySize;	HCHARPTR			m_pCompletePicture; 	// - Ogawa#endif	DCCamMemType		m_CamMemType;//    DCCameraType		m_CameraType; // for CListDlg's OnInitDialog.    BOOL				m_IsGenericNULL;// for CListDlg's OnInitDialog.    BOOL				m_IsSpecificNULL;// for CListDlg's OnInitDialog.	BOOL				m_IsProgFuncNULL; // to get the progressfunction setting.// - Ohbe//*******************************************************************// Overrides	// ClassWizard generated virtual function overrides	//{{AFX_VIRTUAL(CSDKTest1)	public:	virtual BOOL InitInstance();	//}}AFX_VIRTUAL// Implementation	//{{AFX_MSG(CSDKTest1)	afx_msg void OnAppAbout();		// NOTE - the ClassWizard will add and remove member functions here.		//    DO NOT EDIT what you see in these blocks of generated code !	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};//*******************************************************************// +  Ohbe extern CSDKTest1 NEAR theApp;// - Ohbe//*******************************************************************/////////////////////////////////////////////////////////////////////////////