// property.cpp : implementation file//#include "stdafx.h"#include <limits.h>#include "SdkTest1.h"#include "dialog.h"#include "property.h"#ifdef _DEBUG#undef THIS_FILEstatic char BASED_CODE THIS_FILE[] = __FILE__;#endif/////////////////////////////////////////////////////////////////////////////// CDCGetNativeCameraTypeDlg dialogCDCGetNativeCameraTypeDlg::CDCGetNativeCameraTypeDlg(CWnd* pParentWnd)	: CPropertySheetBase("DCGetNativeCameraType",pParentWnd){	m_pGetNativeCameraTypePage=NULL;	m_pInputPage = NULL;	m_pCamTypePage=NULL;	m_pPortAndBitRatePage=NULL;	m_pOthersPage=NULL;	m_pDriverPage=NULL;	StartErrorTrap		m_pGetNativeCameraTypePage=new CDCGetNativeCameraTypePage;		if(m_pGetNativeCameraTypePage==NULL){			break;		}		m_pInputPage=new CInputPage();		if(m_pInputPage==NULL){			break;		}		m_pInputPage->m_IsUseCurrentBuffer= TRUE;		m_IsCameraDataNULL=m_pGetNativeCameraTypePage->m_IsCameraDataNULL;		m_IsCameraPointerNULL=m_pGetNativeCameraTypePage->m_IsCameraPointerNULL;		m_IsInputNULL=m_pGetNativeCameraTypePage->m_IsInputNULL;		m_pCamTypePage=new CCamTypePage;		if(m_pCamTypePage==NULL){			break;		}		m_pPortAndBitRatePage=new CPortAndBitRatePage;		if(m_pPortAndBitRatePage==NULL){			break;		}		m_pOthersPage=new COthersPage;		if(m_pOthersPage==NULL){			break;		}		m_pDriverPage=new CDriverPage;		if(m_pDriverPage==NULL){			break;		}		AddPage(m_pGetNativeCameraTypePage);		AddPage(m_pCamTypePage);		AddPage(m_pInputPage);		AddPage(m_pPortAndBitRatePage);		AddPage(m_pOthersPage);		AddPage(m_pDriverPage);		m_IsSuccessIntialize=TRUE;	EndErrorTrap}CDCGetNativeCameraTypeDlg::~CDCGetNativeCameraTypeDlg(){	if(m_pDriverPage!=NULL){		delete m_pDriverPage;		m_pDriverPage=NULL;	}	if(m_pOthersPage!=NULL){		delete m_pOthersPage;		m_pOthersPage=NULL;	}	if(m_pPortAndBitRatePage!=NULL){		delete m_pPortAndBitRatePage;		m_pPortAndBitRatePage=NULL;	}	if(m_pCamTypePage!=NULL){		delete m_pCamTypePage;		m_pCamTypePage=NULL;	}	if(m_pInputPage!=NULL){		delete m_pInputPage;		m_pCamTypePage=NULL;	}	if(m_pGetNativeCameraTypePage!=NULL){		delete m_pGetNativeCameraTypePage;		m_pGetNativeCameraTypePage=NULL;	}}BEGIN_MESSAGE_MAP(CDCGetNativeCameraTypeDlg, CPropertySheetBase)	//{{AFX_MSG_MAP(CDCGetNativeCameraTypeDlg)	ON_COMMAND(IDOK,OnOK)	//}}AFX_MSG_MAPEND_MESSAGE_MAP()void CDCGetNativeCameraTypeDlg::UpdatePage(){	while(GetPageCount() > 1){		RemovePage(1);	}	if(!m_pGetNativeCameraTypePage->m_IsInputNULL)		AddPage(m_pInputPage);	if(!m_pGetNativeCameraTypePage->m_IsCameraDataNULL){		AddPage(m_pCamTypePage);		AddPage(m_pPortAndBitRatePage);		AddPage(m_pOthersPage);		if(!m_pOthersPage->m_IsDriverNULL){			AddPage(m_pDriverPage);		}	}}void CDCGetNativeCameraTypeDlg::UpdateDriverPage(BOOL IsDriverPageEnable){	int	LastPageNumber;	LastPageNumber=GetPageCount()-1;	if(IsDriverPageEnable){		if(GetPage(LastPageNumber)!=m_pDriverPage){			AddPage(m_pDriverPage);		}	}	else{		if(GetPage(LastPageNumber)==m_pDriverPage){			RemovePage(LastPageNumber);		}	}}void CDCGetNativeCameraTypeDlg::OnOK(){	UpdateData(TRUE);// + Ohbe for WIn32// WIN32 CPropertySheet doesnot have this field....????#ifndef WIN32	GetPage(m_nCurPage)->UpdateData(TRUE);#endif// - Ohbe	m_IsCameraDataNULL=m_pGetNativeCameraTypePage->m_IsCameraDataNULL;	m_IsCameraPointerNULL=m_pGetNativeCameraTypePage->m_IsCameraPointerNULL;	m_IsInputNULL=m_pGetNativeCameraTypePage->m_IsInputNULL;	if(!m_IsCameraDataNULL){		m_pCamTypePage->StoreValue();		m_pPortAndBitRatePage->StoreValue();		m_pOthersPage->StoreValue();		if(!m_pOthersPage->m_IsDriverNULL){			m_pDriverPage->StoreValue();		}	}	if(!m_pGetNativeCameraTypePage->m_IsInputNULL)		m_pInputPage->StoreValue();		//#ifndef WIN32		// Remarked by Ogawa	CPropertySheetBase::OnOK();//#endif			// Remarked by Ogawa}