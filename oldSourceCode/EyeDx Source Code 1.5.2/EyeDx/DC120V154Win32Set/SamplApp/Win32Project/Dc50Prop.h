#ifndef _PROPATY_H_#include "property.h"#endif#ifndef _50PROPATY_H_#define _50PROPATY_H_#endif#ifdef DC50Include/////////////////////////////////////////////////////////////////////////////// CAlbumPage dialogclass CAlbumPage : public CPropertyPage{// Constructionpublic:	CAlbumPage();	// standard constructor	void StoreValue();// Dialog Data	//{{AFX_DATA(CAlbumPage)	enum { IDD = IDD_AlbumNumber };	int m_AlbumNumber;	//}}AFX_DATA// Implementationprotected:	void ChangeParameter();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumPage)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};#endif#ifdef DC50Include/////////////////////////////////////////////////////////////////////////////// CPictNumPage property sheetclass CPictNumPage : public CPropertyPage{// Constructionpublic:	CPictNumPage();	// standard constructor	void StoreValue();// Dialog Data	//{{AFX_DATA(CPictNumPage)	enum { IDD = IDD_PictureNumber };	int m_PictureNumber;	//}}AFX_DATA// Implementationprotected:	//void ChangeParameter();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CPictNumPage)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};#endif#ifdef DC50Include/////////////////////////////////////////////////////////////////////////////// C50FullConfigPage dialogclass C50FullConfigPage : public CPropertyPage{// Constructionpublic:	C50FullConfigPage();	// standard constructor	void StoreValue();	DC50Config	m_FullConfig;// Dialog Data	//{{AFX_DATA(C50FullConfigPage)	enum { IDD = IDD_50CONFIG };	//}}AFX_DATA        DC50FlashMode m_FlashMode;// Implementationprotected:	short		m_RetCmType;//	int 		m_MaxDlgHeight;//	int 		m_DefDlgHeight;	DCTime		m_date;	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CFullConfigPage)	virtual BOOL OnInitDialog();//	virtual void ChangeDlgHeight(int);					// change dialog size	afx_msg void OnSysTime();	virtual void SetDlgItemTime(DCTimePtr);//}}AFX_MSG	DECLARE_MESSAGE_MAP()};#endif//of DC50Include#ifdef DC40Include/////////////////////////////////////////////////////////////////////////////// C40FullConfigPage dialogclass C40FullConfigPage : public CPropertyPage{// Constructionpublic:	C40FullConfigPage();	// standard constructor	void StoreValue();	DC40Config	m_FullConfig;// Dialog Data	//{{AFX_DATA(C50FullConfigPage)	enum { IDD = IDD_40CONFIG };	//}}AFX_DATA    // Implementationprotected:	short		m_RetCmType;//	int 		m_MaxDlgHeight;//	int 		m_DefDlgHeight;	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(C40FullConfigPage)	virtual BOOL OnInitDialog();//	virtual void ChangeDlgHeight(int);					// change dialog size	afx_msg void OnAutoExpoMode();	afx_msg void OnManualExpoMode();//}}AFX_MSG	DECLARE_MESSAGE_MAP()};#endif//of DC40Include#ifdef DC120Include/////////////////////////////////////////////////////////////////////////////// C120FullConfigPage dialogclass C120FullConfigPage : public CPropertyPage{// Constructionpublic:	C120FullConfigPage();	// standard constructor	void StoreValue();	DC120Config	m_FullConfig;// Dialog Data	//{{AFX_DATA(C120FullConfigPage)	enum { IDD = IDD_120CONFIG };	//}}AFX_DATA        DC120FlashMode m_FlashMode;// Implementationprotected:	short		m_RetCmType;//	int 		m_MaxDlgHeight;//	int 		m_DefDlgHeight;	DCTime		m_date;	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(C120FullConfigPage)	virtual BOOL OnInitDialog();//	virtual void ChangeDlgHeight(int);					// change dialog size//	afx_msg void OnSysTime();//	virtual void SetDlgItemTime(DCTimePtr);//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CAlbumBufferPage dialogclass CAlbumBufferPage : public CPropertyPage{// Constructionpublic:	CAlbumBufferPage();	// standard constructor	~CAlbumBufferPage();	void StoreValue();	void ChangeCaption(CString* NewTitle); // to fake the inputpage  as outputpage// Dialog Data	//{{AFX_DATA(CAlbumBufferPage)	enum { IDD = IDD_AlbumBuffer };	long	m_BufferSize;	//}}AFX_DATA	BOOL m_IsUseCurrentBuffer;// Implementationprotected:	void UpdateControl();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumBufferPage)	virtual BOOL OnInitDialog();	afx_msg void OnChangeBufferSize();	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};// + Ogawa/////////////////////////////////////////////////////////////////////////////// CAlbumArrayBufferPage dialogclass CAlbumArrayBufferPage : public CPropertyPage{// Constructionpublic:	CAlbumArrayBufferPage();	// standard constructor	~CAlbumArrayBufferPage();	void StoreValue();// Dialog Data	//{{AFX_DATA(CAlbumArrayBufferPage)	enum { IDD = IDD_AlbumArrayBuffer };	long	m_AlbumArraySize;	//}}AFX_DATA	BOOL m_IsUseCurrentBuffer;// Implementationprotected:	void UpdateControl();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumArrayBufferPage)	virtual BOOL OnInitDialog();	afx_msg void OnChangeCountSize();	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};// - Ogawa/////////////////////////////////////////////////////////////////////////////// CDCAlbumGetAvailableDlg dialogclass CDCAlbumGetAvailableDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumGetAvailableDlg(CWnd* pParentWnd = NULL);	~CDCAlbumGetAvailableDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	// + Ogawa	CAlbumArrayBufferPage*	m_pAlbumArrayBufferPage;	//CAlbumBufferPage*		m_pAlbumBufferPage;	// - Ogawa	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumGetAvailableDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CAlbumNameArrayPage dialogclass CAlbumNameArrayPage : public CPropertyPage{// Constructionpublic:	CAlbumNameArrayPage();	// standard constructor	void StoreValue();// Dialog Data	//{{AFX_DATA(CAlbumNameArrayPage)	enum { IDD = IDD_AlbumArray };/*	CString	m_AlbumName1;	CString	m_AlbumName2;	CString	m_AlbumName3;	CString	m_AlbumName4;	CString	m_AlbumName5;	CString	m_AlbumName6;	CString	m_AlbumName7;	CString	m_AlbumName8;	CString	m_AlbumName9;*/	CString	m_AlbumName[9];  //}}AFX_DATA// Implementationprotected:	void ChangeParameter();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumNameArrayPage)	virtual BOOL OnInitDialog();	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumSetAvailableDlg dialogclass CDCAlbumSetAvailableDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumSetAvailableDlg(CWnd* pParentWnd = NULL);	~CDCAlbumSetAvailableDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;	//AlbumNameArray	m_AlbumNameArray;		// Rem by Ogawaprotected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	// + Ogawa	CAlbumArrayBufferPage*	m_pAlbumArrayBufferPage;	//CAlbumBufferPage*		m_pAlbumBufferPage;	// - Ogawa	CAlbumNameArrayPage*	m_pAlbumNameArrayPage;	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumSetAvailableDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumSetActivePage dialogclass CDCAlbumSetActivePage : public CPropertyPage{// Constructionpublic:	CDCAlbumSetActivePage();	// standard constructor	void StoreValue();// Dialog Data	//{{AFX_DATA(CDCAlbumSetActivePage)	enum { IDD = IDD_DCAlbumSetActive };	long		m_AlbumNum;	BOOL		m_IsCameraDataNULL;	//}}AFX_DATA// Implementationprotected:	void ChangeParameter();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CDCAlbumSetActivePage)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumSetActiveDlg dialogclass CDCAlbumSetActiveDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumSetActiveDlg(CWnd* pParentWnd = NULL);	~CDCAlbumSetActiveDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;	short	m_AlbumNum;protected:	void OnOK();	// + Ogawa	CDCCloseCameraPage*		m_pParamPage;	CAlbumPage*				m_pAlbumNumberPage;	CCamMemTypePage*		m_pCamMemTypePage;	//CDCAlbumSetActivePage*		m_pAlbumSetActivePage;	// - Ogawa	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumSetActiveDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumGetAllNameDlg dialogclass CDCAlbumGetAllNameDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumGetAllNameDlg(CWnd* pParentWnd = NULL);	~CDCAlbumGetAllNameDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	CCamMemTypePage*		m_pCamMemTypePage;	// + Ogawa	//CAlbumCountPage*		m_pAlbumCountPage;	// - Ogawa	CAlbumBufferPage*		m_pAlbumBufferPage;	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumGetAllNameDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumEraseDlg dialogclass CDCAlbumEraseDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumEraseDlg(CWnd* pParentWnd = NULL);	~CDCAlbumEraseDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	CCamMemTypePage*		m_pCamMemTypePage;	CAlbumPage*				m_pAlbumNumberPage;	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumEraseDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CAlbumNamePage dialogclass CAlbumNamePage : public CPropertyPage{// Constructionpublic:	CAlbumNamePage();	// standard constructor// Dialog Data	//{{AFX_DATA(CAlbumNamePage)	enum { IDD = IDD_AlbumName };	CString		m_AlbumName;	//}}AFX_DATA// Implementationprotected:	void UpdateVariable();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumNamePage)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumChangeNameDlg dialogclass CDCAlbumChangeNameDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumChangeNameDlg(CWnd* pParentWnd = NULL);	~CDCAlbumChangeNameDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;	CString m_AlbumName;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	CCamMemTypePage*		m_pCamMemTypePage;	CAlbumPage*				m_pAlbumNumberPage;	CAlbumNamePage*			m_pAlbumNamePage;	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumChangeNameDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CMoveAlbumPage dialogclass CMoveAlbumPage : public CPropertyPage{// Constructionpublic:	CMoveAlbumPage();	// standard constructor	void StoreValue();// Dialog Data	//{{AFX_DATA(CMoveAlbumPage)	enum { IDD = IDD_MoveAlbum };	int m_PictNumber;	int m_FromAlbumNumber;	int m_ToAlbumNumber;	//}}AFX_DATA// Implementationprotected:	void ChangeParameter();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CMoveAlbumPage)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumMoveImageDlg dialogclass CDCAlbumMoveImageDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumMoveImageDlg(CWnd* pParentWnd = NULL);	~CDCAlbumMoveImageDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	CCamMemTypePage*		m_pCamMemTypePage;	CMoveAlbumPage*			m_pMoveAlbumPage;	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumMoveImageDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};// + Ogawa/////////////////////////////////////////////////////////////////////////////// CAlbumCountPage dialogclass CAlbumCountPage : public CPropertyPage{// Constructionpublic:	CAlbumCountPage();	// standard constructor	~CAlbumCountPage();	void StoreValue();	void ChangeCaption(CString* NewTitle); // to fake the inputpage  as outputpage// Dialog Data	//{{AFX_DATA(CAlbumCountPage)	enum { IDD = IDD_AlbumCount };	long	m_NumberOfPictures;	//}}AFX_DATA	BOOL m_IsUseCurrentBuffer;// Implementationprotected:	void UpdateControl();	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support	// Generated message map functions	//{{AFX_MSG(CAlbumCountPage)	virtual BOOL OnInitDialog();	afx_msg void OnChangeCountSize();	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};/////////////////////////////////////////////////////////////////////////////// CDCAlbumGetPictureNameDlg dialogclass CDCAlbumGetPictureNameDlg : public CPropertySheetBase{// Constructionpublic:	CDCAlbumGetPictureNameDlg(CWnd* pParentWnd = NULL);	~CDCAlbumGetPictureNameDlg();	void UpdatePage();	void UpdateDriverPage(BOOL IsDriverPageEnable);	BOOL	m_IsCameraDataNULL;protected:	void OnOK();	CDCCloseCameraPage*		m_pParamPage;	CCamMemTypePage*		m_pCamMemTypePage;	CAlbumPage*				m_pAlbumNumPage;	// + Ogawa	CAlbumCountPage*		m_pAlbumCountPage;	//CAlbumBufferPage*		m_pAlbumBufferPage;	// - Ogawa	CCamTypePage*			m_pCamTypePage;	CPortAndBitRatePage*	m_pPortAndBitRatePage;	COthersPage*			m_pOthersPage;	CDriverPage*			m_pDriverPage;// Generated message map functions	//{{AFX_MSG(CDCAlbumGetAllNameDlg)	//}}AFX_MSG	DECLARE_MESSAGE_MAP()};// - Ogawa#endif//of DC120Include