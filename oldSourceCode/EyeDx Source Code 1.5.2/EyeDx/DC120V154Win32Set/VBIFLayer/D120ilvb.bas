Attribute VB_Name = "Module1"'/************************************************************************************'**  Kodak Digital Camera DC120 Interface Layer for VisualBasic                              *'**  © Copyright Eastman Kodak Company 1997.  All Rights Reserved.                   *'************************************************************************************/'/************************************************************************************'**'**  D120ILVB.BAS'**'**  AUTHORS:'**'**      Futoshi Kitayama, Eastman Kodak Japan R&D Center'**'**  CREATION DATE:'**'**      Jan./22/1997'**'**  MODIFICATION HISTORY:'**'**      Feb./27/1997        This is 1.0 version.'**      Apr./30/1997        This is 1.02 version.'**      Apr./30/1997        This is 1.04 version.'**      Jul./30/1997        This is 1.1 version.'**      Oct./15/1997        This is 1.5 version.'**      Jun./11/1998        This is 1.54 version.'**'************************************************************************************/Public Const DCSDKVersion = &H154      ' Compatibility codePublic Const DCCamIDLength = 33        ' This is used by allocation for CamId in DCCamera and DCConfig structure.Public Const DCNoAlbum = (-1)Public Const DCRootAlbum = 0Public Const DCJPEGTempSize = 1000000Public Const DC40ThumbSize = 18432Public Const DC50ThumbSize = 18432Public Const DC120ThumbSize = 14400'//***********************************************************************************'// Error Codes Returned by the SDK'//***********************************************************************************Public Const DC_NoErr = 0Public Const DC_BadArgError = -1000Public Const DC_BadCloseError = -1001Public Const DC_CameraNotConnected = -1002Public Const DC_CameraNotEmpty = -1021Public Const DC_CameraFunctionNotSupported = -1003Public Const DC_CancelCallback = -1004Public Const DC_CannotHandleCameraType = -1023Public Const DC_CardNotFound = -1005Public Const DC_CommunicationError = -1006Public Const DC_FunctionNotSupported = -1024Public Const DC_ImageProcessError = -1009Public Const DC_InvalidFWError = -1010Public Const DC_MallocError = -1011Public Const DC_MemoryFullError = -1022Public Const DC_NotOpenError = -1013Public Const DC_NotROMMode = -1014Public Const DC_ReOpenError = -1016Public Const DC_ROMModeError = -1017Public Const DC_ROMModeOpen = -1018Public Const DC_SDKVersionError = -1019Public Const DC_SpecificSDKError = -1025Public Const DC_SystemError = -1020'//***********************************************************************************'// Camera data structures'//***********************************************************************************'//***********************************************************************************'// Data Structures for Generic Camera Support'//***********************************************************************************'//**********************************'// Enumerated Data Type Definitions'//**********************************'// DCCameraType is used to identify the type of camera that is opened by'// DCOpenCamera.'type DCCameraType    Public Const DCNoCamera = 0    Public Const DCGenericCamera = 1    Public Const DC20 = 102    Public Const DC25 = 103    Public Const DC40 = 100    Public Const DC50 = 101    Public Const DC120 = 104'end type'// DCPortNum is used by DCOpenCamera to connect to the camera.'type DCPortNum    Public Const DCPortAuto = 0    Public Const DCPortNum1 = 1    Public Const DCPortNum2 = 2    Public Const DCPortNum3 = 3    Public Const DCPortNum4 = 4'end type'// DCBitRate is used by DCOpenCamera to connect to the camera.'type DCBitRate    Public Const DCBitRateAuto = 0    Public Const DCBitRate9600 = 96    Public Const DCBitRate19200 = 192    Public Const DCBitRate38400 = 384    Public Const DCBitRate57600 = 576    Public Const DCBitRate115200 = 1152    Public Const DCBitRate230400 = 2304'end type'// DCImgType is used in the DCImgProcData structure to identify the type of output'// image that will be created by the functions DCGetCameraPicture,'// DCPreviewGetPicture and DCGetNativePicture.'type DCImgType    Public Const DCGrayImage8 = 0    Public Const DCRGBImage24 = 1    Public Const DCRGBImage32 = 2'end type'// DCRotateImg is used in the DCImgProcData structure to define the amount of'// rotation that will be applied to any retrieved image.'type DCRotateImg    Public Const DCRotate0 = 0    Public Const DCRotate90 = 1    Public Const DCRotate180 = 2    Public Const DCRotate270 = 3    Public Const DCUsePictOrientation = 4'end type'// DCWBMode is used in DCImgProcData to define CRT characteristics. If the CRT chara-'// cteristics are properly defined, the image processing software in the SDK will do'// a better job of recreating the captured image on the output display.'type DCWBMode    Public Const DCWBAuto = 0    Public Const DCWBDayLight = 1    Public Const DCWBIndoor = 2    Public Const DCWBFluorescent = 3    Public Const DCWBNone = 4    Public Const DCWBUseManual = 5'end Type'// DCWBData is used in DCImgProcData and DC120PictInfo structures to define a white'// balance gain adjustment value;Type DCWBData    WBGainR As Double    WBGainG As Double    WBGainB As DoubleEnd Type'// DCProgressStatus is used by the DCProgressCB functions to describe the reason for'// the call.'type DCProgressStatus    Public Const DCProgressInit = 0    Public Const DCProgressUpdate = 1    Public Const DCProgressEnd = 2    Public Const DCProgressIncomplete = 3'end type'// DCProgressType is used by the DCProgressCB functions to describe the reason for'// the call.'type DCProgressType    Public Const DCTransferImage = 0    Public Const DCImageProcess = 1'end type'// DCCamMemType is used to specify the storage of the picture.'// when calling DCTakePicture, DCDeletePicture, DCGetCameraPicture,'// DCGetCameraPictInfo and DCGetNativePicture.'type DCCamMemType    Public Const DCCameraMemory = 0    Public Const DCPCCard = 1'end type'// DCJPEGCompLevel is used by the DCGetCameraPictureAsJPEG and DCGetNativePictureAsJPEG'// functions to describe the reason for the call.'type DCJPEGCompLevel    Public Const DCJPEGHighQuality = 0    Public Const DCJPEGMediumQuality = 1    Public Const DCJPEGLowQuality = 2'end type'//*********************'// Symbols Definitions'//*********************'// These symbols define valid parameters for deleting pictures from the camera. These'// can be used in the DCDeletePicture function.Public Const DCDeleteAll = -1'// Following symbol is for copying all pictures in Camera memory to PC card. These'// can be used in the DCCopyMemToCard function.Public Const DCCopyAllImages = -1'//**********************************'// Structured Data Type Definitions'//**********************************'// The DCDriver contains all of the system dependent information for opening a driver'// and connecting it to an application.'// Application does not need to know the field of this structure.Type DCDriver    CamType As Long                 'CamType As DCCameraType    SpecificCamType As Long         'GenericCameraType As DCCameraType    DriverOpenFlag As Boolean    CameraOpenFlag As Boolean    ROMModeFlag As Boolean    Reserved As IntegerEnd Type'// DCCamera contains information specific to an open camera. It is used to identify'// which camera should be used.Type DCCamera    Driver As DCDriver              'Driver As DCDriverPtr    PortNum As Long                 'PortNum As DCPortNum    CamType As Long                 'CamType As DCCameraType    CamId(DCCamIDLength) As Byte    'CamId as CHARPTR    InternalUseOnly As Long         'InternalUseOnly as VOIDPTR    SpecificCamType As Long         'SpecificCamType As DCCameraType    BitRate As Long                 'BitRate As DCBitRateEnd Type'// DCXYChroma is used in the DCCRTData structure to define a CRT display phosphor and'// white-point chromaticity value.Type DCXYChroma    XChroma As Double    YChroma As DoubleEnd Type'// DCCRTData is used in DCImgProcData to define CRT characteristics. If the CRT char-'// acteristics are properly defined, the image processing software in the SDK will do'// a better job of recreating the captured image on the output display.Type DCCRTData    RedChroma As DCXYChroma    GrnChroma As DCXYChroma    BluChroma As DCXYChroma    Gamma As Double    WhiteTemp As DoubleEnd Type'// DCImgProcData is used by DCGetImageProcessing and DCSetImageProcessing to define'// the image processing requirements for the images retrieved from DCGetCameraPicture'// and DCProcNativePicture. The values defined in this structure are applied in the'// host computer after the image is retrieved from the camera.Type DCImgProcData    Reserved1 As Double    ImageType As Long               'ImageType As DCImgType    RotateAngle As Long             'RotateAngle As DCRotateImg    RotateFlag As Integer    UseDefaultCRT As Integer    WhiteBalance As Long            'WhiteBalance As DCWBMode    WBManual As DCWBData    CRTData As DCCRTDataEnd Type'// DCOutputWindow is used by DCGetOutputWindow and DCSetOutputWindow to define a cus-'// tomized output window for images retrieved from DCGetCameraPicture and'// DCProcNativePicture. This structure is used to define an output window that is a'// subset of the full image captured by the camera. If this function is not called,'// the output window will assume default settings(see below).Type DCOutputWindow    HOffset As Integer    VOffset As Integer    Width As Integer    Height As Integer    RowBytes As Long    ThumbRowBytes As LongEnd Type'// DCTime is used to store time information in the SDK. DCTime is defined with the'// same field names as the ANSI C tm structure defined in time.h. It is designed to'// allow DCTime to be easily copied to the ANSI C, but compiler specific, tm structu-'// re so that it can be used to call standard ANSI C functions such as mktime, ascti-'// me, and strftime.Type DCTime    tm_sec As Integer    tm_min As Integer    tm_hour As Integer    tm_mday As Integer    tm_mon As Integer    tm_year As Integer    tm_wday As Integer    tm_yday As Integer    tm_isdst As IntegerEnd Type'// DCStatus contains status information that is common to all PC cameras. It is used'// by DCGetStatus for generic camera support.Type DCStatus    Time As DCTime    FirmwareVersion As Long    NumPictTaken As Integer    NumPictRemaining As Integer    MemPictTaken As Integer    MemPictRemaining As Integer    CardPictTaken As Integer    CardPictRemaining As Integer    ThumbWidth As Integer    ThumbHeight As Integer    PictWidth As Long    PictHeight As LongEnd Type'// DCConfig contains generic configuration information that is common to all PC'// cameras. It is used by DCGetConfig and DCSetConfig for generic camera support.'// Most configuration fields are camera specific, so they are included in the camera'// specific data structures.Type DCConfig    Time As DCTime    CamId(DCCamIDLength) As ByteEnd Type'// DCPictInfo contains dimensions and compressed size of a specified picture along'// with the thumbnail for the picture. This information can be used for buffer alloc-'// ation when retrieving pictures from a camera.Type DCPictInfo    PictNumber As Integer    ThumbWidth As Integer    ThumbHeight As Integer    PictWidth As Long    PictHeight As Long    PictCompSize As Long    PictMinBufIn As Long    PictMinBufOut As Long    TimeStamp As DCTimeEnd Type'//***********************************************************************************'// Data Structures for DC40 Digital Camera Support'//***********************************************************************************Public Const DC40ThumbnailWidth = 96Public Const DC40ThumbnailHeight = 64'//**********************************'// Enumerated Data Type Definitions'//**********************************'// DC40ExposureMode is used to control the current exposure mode of the DC40 camera.'// The exposure is incremented in steps of 1/2 f-stop.'Type DC40ExposureMode    Public Const DC40ExpPlus2 = 1    Public Const DC40ExpPlus1 = 2    Public Const DC40ExpNormal = 3    Public Const DC40ExpMinus1 = 4    Public Const DC40ExpMinus2 = 5'End Type'// DC40TimerMode is used to control current timer mode of the DC40 camera. The camera'// can take a picture camera immediately, wait 10 seconds or wait 20 seconds.'Type DC40TimerMode    Public Const DC40TimerNoDelay = 0    Public Const DC40Timer10Sec = 1    Public Const DC40Timer20Sec = 2'End Type'// DC40FlashMode is used to control the current flash mode of the DC40 camera. The'// camera can automatically flash as needed, always flash, or never flash.'Type DC40FlashMode    Public Const DC40FlashAuto = 0    Public Const DC40FlashOn = 1    Public Const DC40FlashOff = 2'End Type'// DC40PictureMode is used to control the image capture mode of the camera. The DC40'// can capture two types of images, low compression images and high compression images.'Type DC40PictureMode    Public Const DC40HighResolution = 0    Public Const DC40Snapshot = 1'End Type'// DC40BatteryStatus is returned by the SDK to the application as a DC40Status'// information.'Type DC40BatteryStatus    Public Const DC40BatteryOK = 0    Public Const DC40BatteryWeak = 1    Public Const DC40BatteryEmpty = 2'End Type'//**********************************'// Structured Data Type Definitions'//**********************************'// DC40Status holds all DC40 specific status information.Type DC40Status    BatteryLevel As Long        'BatteryLevel As DC40BatteryStatus    BatteryCharger As Boolean    HiResRemaining As Integer    LoResRemaining As IntegerEnd Type'// DC40Config holds all DC40 specific configuration information.Type DC40Config    SleepTimeout As Integer    AcknowledgeMode As Boolean    DefExpMode As Long          'DefExpMode As DC40ExposureMode    DefTimerMode As Long        'DefTimerMode As DC40TimerMode    DefFlashMode As Long        'DefFlashMode As DC40FlashMode    Reserved1 As Integer    UpDownMode As Boolean    ExpMode As Long             'ExpMode As DC40ExposureMode    TimerMode As Long           'TimerMode As DC40TimerMode    FlashMode As Long           'FlashMode As DC40FlashMode    BeepButton As Boolean    BeepEvent As Boolean    DeleteLast As Boolean    DeleteAll As Boolean    PictMode As Long            'PictMode As DC40PictureMode    ManualExpFlag As Boolean    ManualExpTime As Long    ManualFNumber As IntegerEnd Type'// DC40PictInfo holds all DC40 camera specific picture information.Type DC40PictInfo    ExposureTime As Long    FlashUsed As Boolean    FNumber As Integer    PictOrientation As Long     'PictOrientation As DCRotateImgEnd Type'//***********************************************************************************'// Data Structures for DC50 Digital Camera Support'//***********************************************************************************Public Const DC50ThumbnailWidth = 96Public Const DC50ThumbnailHeight = 64'//**********************************'// Enumerated Data Type Definitions'//**********************************'// DC50TimerMode is used to control taking a picture to the DC50 camera immediately'// or wait 10 seconds.'Type DC50TimerMode    Public Const DC50TimerNoDelay = 0    Public Const DC50Timer10Sec = 1'End Type'// DC50FlashMode is used to control the current flash mode of the DC50 camera. The'// camera can automatically flash as needed, always flash, or never flash.'Type DC50FlashMode    Public Const DC50FlashAuto = 0    Public Const DC50FlashOn = 1    Public Const DC50FlashOff = 2'End Type'// DC50PictureMode is used to control the image capture mode of the camera. The DC50'// can capture three types of images, Best mode, Better mode and Good mode.'Type DC50PictureMode    Public Const DC50BestQuality = 0    Public Const DC50BetterQuality = 1    Public Const DC50GoodQuality = 2'End Type'// DC50BatteryStatus is returned by the SDK to the application as a DC50Status'// information.'Type DC50BatteryStatus    Public Const DC50BatteryOK = 0    Public Const DC50BatteryWeak = 1    Public Const DC50BatteryEmpty = 2'End Type'// DC50ZoomPosition is returned by the SDK to the application as a DC50Config'// information.'Type DC50ZoomPosition    Public Const DC50Zoom37mm = 0    Public Const DC50Zoom46mm = 1    Public Const DC50Zoom61mm = 2    Public Const DC50Zoom77mm = 3    Public Const DC50Zoom92mm = 4    Public Const DC50Zoom100mm = 5    Public Const DC50Zoom111mm = 6'End Type'// DC50FocusMode is used to control the focus of the lens. The camera can focus for'// close-up pictures, or it can automatically focus using multiple zones or a'// single zone.'Type DC50FocusMode    Public Const DC50MultiZoneFocus = 0    Public Const DC50SingleZoneFocus = 1    Public Const DC50CloseupFocus = 2'End Type'//**********************************'// Structured Data Type Definitions'//**********************************'// DC50Status holds all DC50 specific status information. Status information is data'// that can be retrieved from the camera and cannot be changed by the application.Type DC50Status    BatteryLevel As Long            'BatteryLevel As DC50BatteryStatus    ACAdapter As Boolean    CardAvailable As Boolean    MemFirstImageNum As Integer    MemNumberOfImages As Integer    CardFirstImageNum As Integer    CardNumberOfImages As Integer    LightValue As Integer    ProgramStatus As Integer        'unsigned short    MemBestTaken As Integer    MemBetterTaken As Integer    MemGoodTaken As Integer    MemBestRemaining As Integer    MemBetterRemaining As Integer    MemGoodRemaining As Integer    ATABestTaken As Integer    ATABetterTaken As Integer    ATAGoodTaken As Integer    ATABestRemaining As Integer    ATABetterRemaining As Integer    ATAGoodRemaining As Integer    ATAVolumeName(12) As ByteEnd Type'// DC50Config holds all DC50 specific configuration information. Configuration information is'// data that can be retrieved from the camera and can be changed and rewritten to the camera.Type DC50Config    SleepTimeout As Integer    TimerDelay As Long          'TimerDelay AsDC50TimerMode    FlashMode As Long           'FlashMode As DC50FlashMode    PictQuality As Long         'PictQuality As DC50PictQuality    ZoomPosition As Long        'ZoomPosition As DC50ZoomPosition    ManualExpFlag As Boolean    ManualExpTime As Long    ManualFNumber As Integer    AutoExpCompValue As Integer    FocusMode As Long           'FocusMode As DC50FocusMode    ProgramMode As Integer    ManualExpUIFlag  As BooleanEnd Type'// DC50PictInfo holds all DC50 camera specific information about a specific picture.Type DC50PictInfo    TimerMode As Long           'TimerMode AsDC50TimerMode    FlashUsed As Boolean    FlashMode As Long           'FlashMode As DC50FlashMode    PictQuality As Long         'PictQuality As DC50PictQuality    ZoomPosition As Long        'ZoomPosition As DC50ZoomPosition    ManualExpFlag As Boolean    ExposureTime As Long    FNumber As Integer    BatteryLevel As Long        'BatteryLevel As DC50BatteryStatus    PictOrientation As Long     'PictOrientation As DCRotateImg    ProgramUsed As Integer    FocusMode As Long           'FocusMode As DC50FocusMode    FocusPosition As Long    LightValue As Integer    ExposureValue As Integer    AVData As Integer    ImageName(9) As ByteEnd Type'// DC50PreviewInfo is used to give the application information about the image that will be'// returned when DCPreviewGetInfo is called. This information can be used for buffer'// allocation when retrieving images from the camera.Type DC50PreviewInfo    PictWidth As Integer    PictHeight As Integer    PictCompSize As Long    PictMinBufIn As Long    PictMinBufOut As Long    PictType As Long               'PictType As DCImgTypeEnd Type'//***********************************************************************************'// Definitions for DC120 Digital Camera Support'//***********************************************************************************Public Const DC120ThumbnailWidth = 80Public Const DC120ThumbnailHeight = 60Public Const DC120AvailableAlbumSize = (8 * 15)Public Const DC120OneAlbumLength = 15Public Const DC120AlbumPictureSize = 15'//**********************************'// Enumerated Data Type Definitions'//**********************************'// DC120TimerMode is used to control taking a picture to the DC120 camera immediately'// or wait 10 seconds.'Type DC120TimerMode    Public Const DC120TimerNoDelay = 0    Public Const DC120Timer10Sec = 1'End Type'// DC120FlashMode is used to control the current flash mode of the DC120 camera. The'// camera can automatically flash as needed, always flash, or never flash.'Type DC120FlashMode    Public Const DC120FlashAuto = 0    Public Const DC120FlashOn = 1    Public Const DC120FlashOff = 2'End Type'// DC120PictureMode is used to control the image capture mode of the camera. The DC120'// can capture three types of images, Best mode, Better mode and Good mode.'Type DC120PictureMode    Public Const DC120NoCompression = 0    Public Const DC120BestQuality = 1    Public Const DC120BetterQuality = 2    Public Const DC120GoodQuality = 3'End Type'// DC120BatteryStatus is returned by the SDK to the application as a DC120Status'// information.'Type DC120BatteryStatus    Public Const DC120BatteryOK = 0    Public Const DC120BatteryWeak = 1    Public Const DC120BatteryEmpty = 2'End Type'// DC120ZoomPosition is returned by the SDK to the application as a DC120Config'// information.'Type DC120ZoomPosition    Public Const DC120Zoom37mm = 0    Public Const DC120Zoom46mm = 1    Public Const DC120Zoom61mm = 2    Public Const DC120Zoom77mm = 3    Public Const DC120Zoom92mm = 4    Public Const DC120Zoom100mm = 5    Public Const DC120Zoom111mm = 6    Public Const DC120ZoomMacroPosition = 7'End Type'// DC120FocusMode is used to control the focus of the lens. The camera can focus for'// close-up pictures, or it can automatically focus using multiple zones or a'// single zone.'Type DC120FocusMode    Public Const DC120MultiZoneFocus = 0    Public Const DC120SingleZoneFocus = 1    Public Const DC120CloseupFocus = 2'End Type'// DC120DateFormat is used to decide the displaying format of'// the date on camera back panel LCD. The camera shows date'// on LCD with this setting.'Type DC120DateFormat    Public Const DC120DayFirst = 0    Public Const DC120MonthFirst = 1    Public Const DC120YearFirst = 2'End Type'// DC120OutputWidth is used to decide the width of the output image.'Type DC120OutputWidth    Public Const DC120OutputW1280 = 1280    Public Const DC120OutputW960 = 960    Public Const DC120OutputW640 = 640    Public Const DC120OutputW320 = 320'End Type'//**********************************'// Structured Data Type Definitions'//**********************************'// DC120Status holds all DC120 specific status information. Status information is data'// that can be retrieved from the camera and cannot be changed by the application.Type DC120Status    BatteryLevel As Long        'BatteryStatusAs DC120BatteryStatus    ACAdapter As Boolean    CardAvailable As Boolean    CoverStatus As Boolean    FlashStatus As Boolean    LightValue As Integer    MemNumImages As Integer    MemNoCompRemaining As Integer    MemBestRemaining As Integer    MemBetterRemaining As Integer    MemGoodRemaining As Integer    MemNumAlbums As Integer    CardNumImages As Integer    CardNoCompRemaining As Integer    CardBestRemaining As Integer    CardBetterRemaining As Integer    CardGoodRemaining As Integer    CardNumAlbums As Integer    CardVolumeName(12) As ByteEnd Type'// DC120Config holds all DC120 specific configuration information. Configuration information is'// data that can be retrieved from the camera and can be changed and rewritten to the camera.Type DC120Config    CaptureSleepTO As Integer    ReviewSleepTO As Integer    TimerDelay As Long              'TimerDelay As DC120TimerMode    FlashMode As Long               'FlashMode As DC120FlashMode    PictQuality As Long             'PictQuality As DC120PictureMode    ZoomPosition As Long            'ZoomPosition As DC120ZoomPosition    ManualExpFlag As Boolean    ManualExpTime As Long    ManualFNumber As Integer    AutoExpCompValue As Integer    FocusMode As Long               'FocusMode As DC120FocusMode    DateFormat As Long              'DateFormat As DC120DateFormat    TimeFormat As Boolean    DistanceDspFormat As Boolean    DefFlashMode As Long            'DefFlashMode As DC120FlashModeEnd Type                                '// DC120PictInfo holds all DC120 camera specific information about a specific picture.Type DC120PictInfo    TimerMode As Long           'TimerMode As DC120TimerMode    FlashUsed As Boolean    FlashMode As Long           'FlashMode As DC120FlashMode    PictQuality As Long         'PictQuality As DC120PictureMode    ZoomPosition As Long        'ZoomPosition As DC120ZoomPosition    ManualExpFlag As Boolean    ExposureTime As Long    FNumber As Integer    BatteryLevel As Long        'BatteryLevel As DC120BatteryStatus    PictOrientation As Long     'PictOrientation As DCRotateImg    FocusMode As Long           'FocusMode As DC120FocusMode    FocusPosition As Long    LightValue As Integer    Reserved1 As Long    WBAuto As DCWBData              'WBAuto As DCWBData    WBDayLight As DCWBData          'WBDayLight As DCWBData    WBIndoor As DCWBData            'WBIndoor As DCWBData    WBFluorescent As DCWBData       'WBFluorescent As DCWBData    ImageName(9) As ByteEnd Type'// DC120AllAlbum holds all album names and number of'// images of each album in the DC120 camera.Type DC120AllAlbum    AlbumName(DC120OneAlbumLength) As Byte    PictNum As LongEnd Type'//***********************************************************************************'// Function Definitions'//***********************************************************************************'//***********************************************************************************'// Camera Initialization Functions'//'// The camera initialization functions are called by the application to open and'// close the necessary data structures for accessing the SDK functionality. They are:'//'//      DCOpenDriver'//      DCCloseDriver'//      DCOpenCamera'//      DCCloseCamera'//'//***********************************************************************************Declare Function DCOpenDriver Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBOpenDriver@8" (Version As Integer, Driver As DCDriver) As IntegerDeclare Function DCCloseDriver Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBCloseDriver@4" (Driver As DCDriver) As IntegerDeclare Function DCOpenCamera Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBOpenCamera@4" (CameraData As DCCamera) As IntegerDeclare Function DCCloseCamera Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBCloseCamera@4" (CameraData As DCCamera) As Integer'//***********************************************************************************'// Camera Control Functions'//'// The camera control functions are call be the application to control the current'// status of an open camera. They are:'//'//      DCGetStatus'//      DCGetConfig'//      DCSetConfig'//      DCResetCamera'//'// If the opened CamType is DCNoCamera, these functions are not supported.'//'//***********************************************************************************Declare Function DCGetStatus Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetStatus@12" (CameraData As DCCamera, GenericStatus As DCStatus, FullStatus As Any) As IntegerDeclare Function DCGetConfig Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetConfig@12" (CameraData As DCCamera, GenericConfig As DCConfig, FullConfig As Any) As IntegerDeclare Function DCSetConfig Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBSetConfig@12" (CameraData As DCCamera, GenericConfig As DCConfig, FullConfig As Any) As IntegerDeclare Function DCResetCamera Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBResetCamera@4" (CameraData As DCCamera) As Integer'//***********************************************************************************'// Image Processing Control Functions'//'// The image processing control functions give the application control over some of'// the image processing functionality. They are:'//'//      DCGetImageProcessing'//      DCSetImageProcessing'//      DCGetOutputWindow'//      DCSetOutputWindow'//'//***********************************************************************************Declare Function DCGetImageProcessing Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetImageProcessing@8" (CameraData As DCCamera, IPData As DCImgProcData) As IntegerDeclare Function DCSetImageProcessing Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBSetImageProcessing@8" (CameraData As DCCamera, IPData As DCImgProcData) As IntegerDeclare Function DCGetOutputWindow Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetOutputWindow@8" (CameraData As DCCamera, WindowData As DCOutputWindow) As IntegerDeclare Function DCSetOutputWindow Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBSetOutputWindow@8" (CameraData As DCCamera, WindowData As DCOutputWindow) As Integer'//***********************************************************************************'// Image Management Functions'//'// The image management functions control the images in the camera. They are:'//'//      DCTakePicture'//      DCDeletePicture'//      DCCopyMemToCard'//'//***********************************************************************************Declare Function DCTakePicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBTakePicture@24" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal ThumbFlag As Boolean, ThumbImage As Byte, GenericInfo As DCPictInfo, FullInfo As Any) As IntegerDeclare Function DCDeletePicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBDeletePicture@16" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, ByVal PictNum As Integer) As IntegerDeclare Function DCCopyMemToCard Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBCopyMemToCard@12" (CameraData As DCCamera, ByVal AlbumNum As Integer, ByVal PictNum As Integer) As Integer'//***********************************************************************************'// Image Retrieval Functions'//'// The image retrieval functions allow the application to access the images stored in'// the camera. They are:'//'//      DCGetCameraPictInfo'//      DCGetNativeCameraType'//      DCGetNativePictInfo'//      DCGetCameraPicture'//      DCGetNativePicture'//      DCProcNativePicture'//      DCGetCameraPictureAsJPEG'//      DCProcNativePictureAsJPEG'//'//***********************************************************************************Declare Function DCGetCameraPictInfo Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetCameraPictInfo@32" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, ByVal PictNum As Integer, ByVal ThumbFlag As Boolean, ThumbImage As Byte, GenericInfo As DCPictInfo, FullInfo As Any) As IntegerDeclare Function DCGetNativeCameraType Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetNativeCameraType@16" (CameraData As DCCamera, ByVal InputSize As Long, InputBuf As Byte, CameraType As Long) As IntegerDeclare Function DCGetNativePictInfo Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetNativePictInfo@28" (CameraData As DCCamera, ByVal InputSize As Long, InputBuf As Byte, ByVal ThumbFlag As Boolean, ThumbImage As Byte, GenericInfo As DCPictInfo, FullInfo As Any) As IntegerDeclare Function DCGetCameraPicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetCameraPicture@32" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, Picture As DCPictInfo, ByVal InputSize As Long, InputBuf As Byte, ByVal OutputSize As Long, OutputBuf As Byte) As IntegerDeclare Function DCGetNativePicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetNativePicture@24" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, Picture As DCPictInfo, ByVal OutputSize As Long, OutputBuf As Byte) As IntegerDeclare Function DCProcNativePicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBProcNativePicture@24" (CameraData As DCCamera, Picture As DCPictInfo, ByVal InputSize As Long, InputBuf As Byte, ByVal OutputSize As Long, OutputBuf As Byte) As IntegerDeclare Function DCGetCameraPictureAsJPEG Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBGetCameraPictureAsJPEG@40" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, Picture As DCPictInfo, ByVal CompLevel As Long, JPEGSize As Long, ByVal InputSize As Long, InputBuf As Byte, ByVal OutputSize As Long, OutputBuf As Byte) As IntegerDeclare Function DCProcNativePictureAsJPEG Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBProcNativePictureAsJPEG@32" (CameraData As DCCamera, Picture As DCPictInfo, ByVal CompLevel As Long, JPEGSize As Long, ByVal InputSize As Long, InputBuf As Byte, ByVal OutputSize As Long, OutputBuf As Byte) As Integer'//***********************************************************************************'// Preview Image Functions'//'// The preview image functions are only supported by DC50 camera. when the CamType or'// SpecificCamType is DC50, these functions are available. Otherwise, the SDK returns'// error code to the application. They are:'//'//      DCPreviewGetInfo'//      DCPreviewGetPicture'//      DCPreviewStore'//      DCPreviewErase'//'//***********************************************************************************Declare Function DCPreviewGetInfo Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBPreviewGetInfo@8" (CameraData As DCCamera, PreviewInfo As Any) As IntegerDeclare Function DCPreviewGetPicture Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBPreviewGetPicture@20" (CameraData As DCCamera, ByVal InputSize As Long, InputBuf As Byte, ByVal OutputSize As Long, OutputBuf As Byte) As IntegerDeclare Function DCPreviewStore Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBPreviewStore@24" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal ThumbFlag As Boolean, ThumbImage As Byte, GenericPictInfo As DCPictInfo, FullInfo As Any) As IntegerDeclare Function DCPreviewErase Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBPreviewErase@4" (CameraData As DCCamera) As Integer'//***********************************************************************************'// Album Management Functions'//'// The album management functions are only supported by DC120 camera. Album is similar'// to the directory for the Windows or the other folder for the Macintosh. when the'// CamType or SpecificCamType is DC120, these functions are available. Otherwise, the'// SDK returns error code to the application. They are:'//'//      DCAlbumGetAvailable'//      DCAlbumSetAvailable'//      DCAlbumSetActive'//      DCAlbumGetAllName'//      DCAlbumErase'//      DCAlbumChangeName'//      DCAlbumMoveImage'//      DCAlbumGetPictureName'//'//***********************************************************************************Declare Function DCAlbumGetAvailable Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumGetAvailable@8" (CameraData As DCCamera, AvailableAlbum As Byte) As IntegerDeclare Function DCAlbumSetAvailable Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumSetAvailable@8" (CameraData As DCCamera, AvailableAlbum As Byte) As IntegerDeclare Function DCAlbumSetActive Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumSetActive@8" (CameraData As DCCamera, ByVal ActiveAlbum As Integer) As IntegerDeclare Function DCAlbumGetAllName Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumGetAllName@12" (CameraData As DCCamera, ByVal CamMemType As Long, AllAlbum As Any) As IntegerDeclare Function DCAlbumErase Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumErase@12" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer) As IntegerDeclare Function DCAlbumChangeName Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumChangeName@16" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, AlbumName As Byte) As IntegerDeclare Function DCAlbumMoveImage Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumMoveImage@20" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal PictNum As Integer, ByVal FromAlbumNum As Integer, ByVal ToAlbumNum As Integer) As IntegerDeclare Function DCAlbumGetPictureName Lib "DC120VBIFLV154_32.DLL" Alias "_DCILVBAlbumGetPictureName@16" (CameraData As DCCamera, ByVal CamMemType As Long, ByVal AlbumNum As Integer, PictName As Byte) As Integer